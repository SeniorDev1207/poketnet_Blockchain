{"version":3,"sources":["webpack:///../shared/core-utils/renderer/markdown.ts","webpack:///./src/assets/player/utils.ts","webpack:///../shared/core-utils/renderer/html.ts","webpack:///./src/assets/player/peertube-player-local-storage.ts","webpack:///./src/assets/player/p2p-media-loader/segment-validator.ts","webpack:///./src/assets/player/upnext/end-card.ts","webpack:///./src/assets/player/upnext/upnext-plugin.ts","webpack:///./src/assets/player/bezels/pause-bezel.ts","webpack:///./src/assets/player/bezels/bezels-plugin.ts","webpack:///./src/assets/player/videojs-components/settings-menu-item.ts","webpack:///./src/assets/player/videojs-components/settings-menu-button.ts","webpack:///./src/assets/player/peertube-plugin.ts","webpack:///./src/assets/player/videojs-components/next-previous-video-button.ts","webpack:///./src/assets/player/videojs-components/p2p-info-button.ts","webpack:///./src/assets/player/videojs-components/peertube-link-button.ts","webpack:///./src/assets/player/videojs-components/peertube-load-progress-bar.ts","webpack:///./src/assets/player/videojs-components/resolution-menu-item.ts","webpack:///./src/assets/player/videojs-components/resolution-menu-button.ts","webpack:///./src/assets/player/videojs-components/settings-dialog.ts","webpack:///./src/assets/player/videojs-components/settings-panel.ts","webpack:///./src/assets/player/videojs-components/settings-panel-child.ts","webpack:///./src/assets/player/videojs-components/theater-button.ts","webpack:///./src/assets/player/playlist/playlist-button.ts","webpack:///./src/assets/player/playlist/playlist-menu-item.ts","webpack:///./src/assets/player/playlist/playlist-menu.ts","webpack:///./src/assets/player/playlist/playlist-plugin.ts","webpack:///./src/assets/player/p2p-media-loader/redundancy-url-manager.ts","webpack:///./src/assets/player/p2p-media-loader/segment-url-builder.ts","webpack:///./src/assets/player/peertube-player-manager.ts"],"names":["TEXT_RULES","TEXT_WITH_HTML_RULES","concat","toTitleCase","str","charAt","toUpperCase","slice","isIOS","test","navigator","platform","maxTouchPoints","isSafari","userAgent","dictionaryBytes","max","type","bytes","value","format","find","d","length","Math","floor","toString","isMobile","buildVideoLink","options","baseUrl","url","window","location","origin","pathname","replace","params","URLSearchParams","search","delete","generateParams","startTime","startTimeInt","set","secondsToTime","stopTime","stopTimeInt","subtitle","loop","autoplay","muted","title","warningTitle","controls","peertubeLink","hasParams","forEach","buildUrl","timeToInt","time","matches","match","parseInt","seconds","full","symbol","hourSymbol","minuteSymbol","secondsSymbol","hours","minutes","buildVideoOrPlaylistEmbed","embedUrl","embedTitle","stringParam","entityMap","'","String","s","escapeHTML","videoFileMaxByResolution","files","i","file","resolution","id","videoFileMinByResolution","min","getRtcConfig","iceServers","urls","getStoredVolume","getLocalStorage","valueNumber","parseFloat","isNaN","getStoredP2PEnabled","getStoredMute","getStoredTheater","saveVolumeInStore","setLocalStorage","saveMuteInStore","saveTheaterInStore","enabled","saveAverageBandwidth","getAverageBandwidthInStore","saveLastSubtitle","language","getStoredLastSubtitle","saveVideoWatchHistory","videoUUID","duration","JSON","stringify","data","parse","error","console","getStoredVideoWatchHistory","date","Date","toISOString","KEY_PREFIX","key","localStorage","getItem","setItem","segmentValidatorFactory","segmentsSha256Url","isLive","segmentsJSON","fetchSha256Segments","regex","segmentValidator","segment","_method","_peerId","retry","filename","segmentValue","Error","log","hashShouldBe","range","captured","exec","undefined","calculatedSha","crypto","subtle","digest","then","buffer","h","Uint8Array","v","bufferToHex","sha256","update","Buffer","from","sha256Hex","fetch","res","json","catch","err","Component","getComponent","registerComponent","player","super","dashOffsetTotal","dashOffsetStart","interval","upNextEvents","EventTarget","ticks","this","totalTicks","options_","timeout","on","_","condition","addClass","showCard","canceled","removeClass","container","style","display","next","trigger","createEl","className","innerHTML","headText","cancelText","suspendedText","autoplayRing","getElementsByClassName","cancelButton","suspendedMessage","nextButton","onclick","cb","setAttribute","getTitle","one","clearTimeout","goToPercent","percent","newOffset","tick","suspended","innerText","setTimeout","bind","Plugin","getPlugin","registerPlugin","settings","ready","addChild","seeking","ended","showBezel","MenuItem","component","settingsButton","menuButton","dialog","mainMenu","menu","panel","getChild","panelChild","panelChildEl","el","size","menuToLoad","subMenuName","entry","SubMenuComponent","newOptions","Object","assign","subMenu","subMenuClass","buildCSSClass","split","settingsSubMenuEl_","eventHandlers","player_","build","submenuClickHandler","appendChild","bindClickEvents","reset","onSubmenuClick","transitionEndHandler","onTransitionEnd","event","target","currentTarget","classList","contains","loadMainMenu","dom","settingsSubMenuTitleEl_","settingsSubMenuValueEl_","handleClick","opacity","hasClass","marginRight","setDialogSize","button","localize","controlText","element","callback","action","prefix","p","toLowerCase","addEventListener","removeEventListener","propertyName","setMargin","mainMenuEl","show","mainMenuAny","width","height","setSize","createBackButton","PrefixedEvent","name","html","labelEl_","subMenuItem","children_","subMenuItemUntyped","getLabel","label","hideDialog","item","children","getComponentSize","prototype","contentElType","Button","Menu","settingsButtonOptions","dialogEl","addSettingsItemHandler","onAddSettingsItem","disposeSettingsItemHandler","onDisposeSettingsItem","playerClickHandler","onPlayerClick","userInactiveHandler","onUserInactive","buildMenu","bindEvents","parentElement","dispose","removeChild","entries","addMenuItem","showDialog","peertube","onMenuOpen","onMenuClosed","hide","resetChildren","offsetWidth","offsetHeight","offset","setup","maxHeightOffset","maxHeight","panelEl","settingsMenuItem","hideChildren","el_","menuChild","hideSubMenu","CONSTANTS","USER_WATCHING_VIDEO_INTERVAL","menuOpened","mouseInControlBar","videoViewUrl","videoDuration","videoCaptions","savedInactivityTimeout","inactivityTimeout","playerOptions","mode","webtorrent","handleResolutionChange","p2pMediaLoader","tech","lastResolutionChange","volume","defaultSubtitle","self","onTimeUpdate","currentTime","pause","off","textTracks","showing","tracks_","t","kind","initCaptions","initializePlayer","runViewAdd","runUserWatchVideo","userWatching","videoViewInterval","clearInterval","userWatchingVideoInterval","alterInactivity","initSmoothProgressBar","listenControlBarMouse","clearVideoViewInterval","minSecondsToView","secondsViewed","setInterval","paused","addViewToVideo","lastCurrentTime","notifyUserIsWatching","authorizationHeader","method","Promise","resolve","body","append","headers","Headers","qualityLevels","resolutionId","controlBar","isTouchEnabled","msMaxTouchPoints","caption","addRemoteTextTrack","src","default","SeekBar","getPercent","handleMouseMove","newTime","calculateDistance","nextPreviousVideoButtonOptions","nextIcon","handler","isDisabled","div","subDivWebtorrent","downloadIcon","downloadSpeedText","downloadSpeedNumber","downloadSpeedUnit","uploadIcon","uploadSpeedText","uploadSpeedNumber","uploadSpeedUnit","peersText","peersNumber","subDivHttp","subDivHttpText","textContent","p2pStats","p2p","httpStats","http","downloadSpeed","uploadSpeed","totalDownloaded","downloaded","totalUploaded","uploaded","numPeers","join","source","downloadedFromServer","downloadedFromPeers","buildElement","href","updateHref","torrent","getTorrent","progress","ResolutionMenuItem","selectable","autoResolutionPossible","currentResolutionLabel","labels","updateSelection","updateAutoResolution","selected","auto","possible","MenuButton","e","buildQualities","buildWrapperCSSClass","child","qualityData","video","sort","a","b","qualitySwitchCallback","m","addClickListener","uniqueId","tabIndex","THEATER_MODE_CLASS","handleTheaterChange","theaterEnabled","isTheaterEnabled","toggleClass","ClickableComponent","PlaylistButton","wrapper","icon","playlistInfoElement","getCurrentPosition","playlist","videosLength","displayName","getPlaylistMenu","open","playlistMenu","emitTapEvents","switchPlaylistItem","handleKeyDown","li","add","positionBlock","position","buildAvailableVideo","buildUnavailableVideo","videoElement","thumbnail","thumbnailPath","infoBlock","channel","startTimestamp","stopTimestamp","timestamps","block","code","onClicked","close","current","menuItems","getOptions","header","headerLeft","leftTitle","playlistChannel","videoChannel","leftSubtitle","list","playlistElement","elements","onItemClicked","push","updateSelected","newPosition","setSelected","getElement","playlistButton","baseUrls","segmentUrl","filter","u","getRandomInt","newBaseUrl","slashPart","endsWith","random","segmentUrlBuilderFactory","redundancyUrlManager","controlText_","CaptionsButton","label_","alreadyPlayed","onPlayerChange","playerElementClassName","common","playerElement","all","videojsOptions","getVideojsOptions","loadLocaleInVideoJS","serverUrl","alreadyFallback","maybeFallbackToWebTorrent","addContextMenu","bezels","currentMode","newVideoElement","document","createElement","currentParentPlayerElement","parentNode","getElementById","insertBefore","onPlayerElementChange","p2pMediaLoaderModule","commonOptions","isHLS","getAutoPlayValue","html5","preloadTextTracks","plugins","enableHotkeys","addHotkeysOptions","hlsjs","addP2PMediaLoaderOptions","addWebTorrentOptions","textTrackSettings","poster","playbackRates","getControlBarChildren","captions","theaterButton","nextVideo","hasNextVideo","previousVideo","hasPreviousVideo","p2pMediaLoaderOptions","trackerAnnounce","startsWith","redundancyBaseUrls","playlistUrl","consumeOnly","connection","p2pMediaLoaderConfig","loader","rtcConfig","requiredSegmentsPriority","segmentUrlBuilder","useP2P","segments","swarmId","toAssign","levelLabelHandler","level","videoFiles","f","fps","hlsjsConfig","capLevelToPlayerSize","autoStartLoad","liveSyncDurationCount","Engine","createLoaderClass","webtorrentOptions","settingEntries","loadProgressBar","playToggle","videoEmbedUrl","videoEmbedTitle","isNaked","ctrlKey","altKey","metaKey","shiftKey","hotkeys","skipInitialFocus","enableInactiveFocus","captureDocumentHotkeys","documentHotkeysFocusElementFilter","tagName","enableVolumeScroll","enableModifiersForNumbers","rewindKey","forwardKey","fullscreenKey","customKeys","increasePlaybackRateKey","newValue","playbackRate","toFixed","decreasePlaybackRateKey","frameByFrame"],"mappings":"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","file":"11.chunk.js","sourcesContent":["export const TEXT_RULES = [\n  'linkify',\n  'autolink',\n  'emphasis',\n  'link',\n  'newline',\n  'list'\n]\n\nexport const TEXT_WITH_HTML_RULES = TEXT_RULES.concat([\n  'html_inline',\n  'html_block'\n])\n\nexport const ENHANCED_RULES = TEXT_RULES.concat([ 'image' ])\nexport const ENHANCED_WITH_HTML_RULES = TEXT_WITH_HTML_RULES.concat([ 'image' ])\n\nexport const COMPLETE_RULES = ENHANCED_WITH_HTML_RULES.concat([\n  'block',\n  'inline',\n  'heading',\n  'paragraph'\n])\n","import { VideoFile } from '@shared/models'\nimport { escapeHTML } from '@shared/core-utils/renderer'\n\nfunction toTitleCase (str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nfunction isWebRTCDisabled () {\n  return !!((window as any).RTCPeerConnection || (window as any).mozRTCPeerConnection || (window as any).webkitRTCPeerConnection) === false\n}\n\nfunction isIOS () {\n  if (/iPad|iPhone|iPod/.test(navigator.platform)) {\n    return true\n  }\n\n  // Detect iPad Desktop mode\n  return !!(navigator.maxTouchPoints &&\n      navigator.maxTouchPoints > 2 &&\n      /MacIntel/.test(navigator.platform))\n}\n\nfunction isSafari () {\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n}\n\n// https://github.com/danrevah/ngx-pipes/blob/master/src/pipes/math/bytes.ts\n// Don't import all Angular stuff, just copy the code with shame\nconst dictionaryBytes: Array<{max: number, type: string}> = [\n  { max: 1024, type: 'B' },\n  { max: 1048576, type: 'KB' },\n  { max: 1073741824, type: 'MB' },\n  { max: 1.0995116e12, type: 'GB' }\n]\nfunction bytes (value: number) {\n  const format = dictionaryBytes.find(d => value < d.max) || dictionaryBytes[dictionaryBytes.length - 1]\n  const calc = Math.floor(value / (format.max / 1024)).toString()\n\n  return [ calc, format.type ]\n}\n\nfunction isMobile () {\n  return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n}\n\nfunction buildVideoLink (options: {\n  baseUrl?: string\n\n  startTime?: number\n  stopTime?: number\n\n  subtitle?: string\n\n  loop?: boolean\n  autoplay?: boolean\n  muted?: boolean\n\n  // Embed options\n  title?: boolean\n  warningTitle?: boolean\n  controls?: boolean\n  peertubeLink?: boolean\n} = {}) {\n  const { baseUrl } = options\n\n  const url = baseUrl\n    ? baseUrl\n    : window.location.origin + window.location.pathname.replace('/embed/', '/watch/')\n\n  const params = generateParams(window.location.search)\n\n  if (options.startTime !== undefined && options.startTime !== null) {\n    const startTimeInt = Math.floor(options.startTime)\n    params.set('start', secondsToTime(startTimeInt))\n  }\n\n  if (options.stopTime) {\n    const stopTimeInt = Math.floor(options.stopTime)\n    params.set('stop', secondsToTime(stopTimeInt))\n  }\n\n  if (options.subtitle) params.set('subtitle', options.subtitle)\n\n  if (options.loop === true) params.set('loop', '1')\n  if (options.autoplay === true) params.set('autoplay', '1')\n  if (options.muted === true) params.set('muted', '1')\n  if (options.title === false) params.set('title', '0')\n  if (options.warningTitle === false) params.set('warningTitle', '0')\n  if (options.controls === false) params.set('controls', '0')\n  if (options.peertubeLink === false) params.set('peertubeLink', '0')\n\n  return buildUrl(url, params)\n}\n\nfunction buildPlaylistLink (options: {\n  baseUrl?: string\n\n  playlistPosition: number\n}) {\n  const { baseUrl } = options\n\n  const url = baseUrl\n    ? baseUrl\n    : window.location.origin + window.location.pathname.replace('/video-playlists/embed/', '/videos/watch/playlist/')\n\n  const params = generateParams(window.location.search)\n\n  if (options.playlistPosition) params.set('playlistPosition', '' + options.playlistPosition)\n\n  return buildUrl(url, params)\n}\n\nfunction buildUrl (url: string, params: URLSearchParams) {\n  let hasParams = false\n  params.forEach(() => hasParams = true)\n\n  if (hasParams) return url + '?' + params.toString()\n\n  return url\n}\n\nfunction generateParams (url: string) {\n  const params = new URLSearchParams(window.location.search)\n  // Unused parameters in embed\n  params.delete('videoId')\n  params.delete('resume')\n\n  return params\n}\n\nfunction timeToInt (time: number | string) {\n  if (!time) return 0\n  if (typeof time === 'number') return time\n\n  const reg = /^((\\d+)[h:])?((\\d+)[m:])?((\\d+)s?)?$/\n  const matches = time.match(reg)\n\n  if (!matches) return 0\n\n  const hours = parseInt(matches[2] || '0', 10)\n  const minutes = parseInt(matches[4] || '0', 10)\n  const seconds = parseInt(matches[6] || '0', 10)\n\n  return hours * 3600 + minutes * 60 + seconds\n}\n\nfunction secondsToTime (seconds: number, full = false, symbol?: string) {\n  let time = ''\n\n  if (seconds === 0 && !full) return '0s'\n\n  const hourSymbol = (symbol || 'h')\n  const minuteSymbol = (symbol || 'm')\n  const secondsSymbol = full ? '' : 's'\n\n  const hours = Math.floor(seconds / 3600)\n  if (hours >= 1) time = hours + hourSymbol\n  else if (full) time = '0' + hourSymbol\n\n  seconds %= 3600\n  const minutes = Math.floor(seconds / 60)\n  if (minutes >= 1 && minutes < 10 && full) time += '0' + minutes + minuteSymbol\n  else if (minutes >= 1) time += minutes + minuteSymbol\n  else if (full) time += '00' + minuteSymbol\n\n  seconds %= 60\n  if (seconds >= 1 && seconds < 10 && full) time += '0' + seconds + secondsSymbol\n  else if (seconds >= 1) time += seconds + secondsSymbol\n  else if (full) time += '00'\n\n  return time\n}\n\nfunction buildVideoOrPlaylistEmbed (embedUrl: string, embedTitle: string) {\n  const title = escapeHTML(embedTitle)\n  return '<iframe width=\"560\" height=\"315\" ' +\n    'sandbox=\"allow-same-origin allow-scripts allow-popups\" ' +\n    'title=\"' + title + '\" ' +\n    'src=\"' + embedUrl + '\" ' +\n    'frameborder=\"0\" allowfullscreen>' +\n    '</iframe>'\n}\n\nfunction videoFileMaxByResolution (files: VideoFile[]) {\n  let max = files[0]\n\n  for (let i = 1; i < files.length; i++) {\n    const file = files[i]\n    if (max.resolution.id < file.resolution.id) max = file\n  }\n\n  return max\n}\n\nfunction videoFileMinByResolution (files: VideoFile[]) {\n  let min = files[0]\n\n  for (let i = 1; i < files.length; i++) {\n    const file = files[i]\n    if (min.resolution.id > file.resolution.id) min = file\n  }\n\n  return min\n}\n\nfunction getRtcConfig () {\n  return {\n    iceServers: [\n      {\n        urls: 'stun:stun.stunprotocol.org'\n      },\n      {\n        urls: 'stun:stun.framasoft.org'\n      }\n    ]\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  getRtcConfig,\n  toTitleCase,\n  timeToInt,\n  secondsToTime,\n  isWebRTCDisabled,\n  buildPlaylistLink,\n  buildVideoLink,\n  buildVideoOrPlaylistEmbed,\n  videoFileMaxByResolution,\n  videoFileMinByResolution,\n  isMobile,\n  bytes,\n  isIOS,\n  isSafari\n}\n","export const SANITIZE_OPTIONS = {\n  allowedTags: [ 'a', 'p', 'span', 'br', 'strong', 'em', 'ul', 'ol', 'li' ],\n  allowedSchemes: [ 'http', 'https' ],\n  allowedAttributes: {\n    a: [ 'href', 'class', 'target', 'rel' ]\n  },\n  transformTags: {\n    a: (tagName: string, attribs: any) => {\n      let rel = 'noopener noreferrer'\n      if (attribs.rel === 'me') rel += ' me'\n\n      return {\n        tagName,\n        attribs: Object.assign(attribs, {\n          target: '_blank',\n          rel\n        })\n      }\n    }\n  }\n}\n\n// Thanks: https://stackoverflow.com/a/12034334\nexport function escapeHTML (stringParam: string) {\n  if (!stringParam) return ''\n\n  const entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  }\n\n  return String(stringParam).replace(/[&<>\"'`=/]/g, s => entityMap[s])\n}\n","function getStoredVolume () {\n  const value = getLocalStorage('volume')\n  if (value !== null && value !== undefined) {\n    const valueNumber = parseFloat(value)\n    if (isNaN(valueNumber)) return undefined\n\n    return valueNumber\n  }\n\n  return undefined\n}\n\nfunction getStoredP2PEnabled (): boolean {\n  const value = getLocalStorage('webtorrent_enabled')\n  if (value !== null && value !== undefined) return value === 'true'\n\n  // By default webtorrent is enabled\n  return true\n}\n\nfunction getStoredMute () {\n  const value = getLocalStorage('mute')\n  if (value !== null && value !== undefined) return value === 'true'\n\n  return undefined\n}\n\nfunction getStoredTheater () {\n  const value = getLocalStorage('theater-enabled')\n  if (value !== null && value !== undefined) return value === 'true'\n\n  return false\n}\n\nfunction saveVolumeInStore (value: number) {\n  return setLocalStorage('volume', value.toString())\n}\n\nfunction saveMuteInStore (value: boolean) {\n  return setLocalStorage('mute', value.toString())\n}\n\nfunction saveTheaterInStore (enabled: boolean) {\n  return setLocalStorage('theater-enabled', enabled.toString())\n}\n\nfunction saveAverageBandwidth (value: number) {\n  return setLocalStorage('average-bandwidth', value.toString())\n}\n\nfunction getAverageBandwidthInStore () {\n  const value = getLocalStorage('average-bandwidth')\n  if (value !== null && value !== undefined) {\n    const valueNumber = parseInt(value, 10)\n    if (isNaN(valueNumber)) return undefined\n\n    return valueNumber\n  }\n\n  return undefined\n}\n\nfunction saveLastSubtitle (language: string) {\n  return setLocalStorage('last-subtitle', language)\n}\n\nfunction getStoredLastSubtitle () {\n  return getLocalStorage('last-subtitle')\n}\n\nfunction saveVideoWatchHistory(videoUUID: string, duration: number) {\n  return setLocalStorage(`video-watch-history`, JSON.stringify({\n    ...getStoredVideoWatchHistory(),\n    [videoUUID]: {\n      duration,\n      date: `${(new Date()).toISOString()}`\n    }\n  }))\n}\n\nfunction getStoredVideoWatchHistory(videoUUID?: string) {\n  let data\n\n  try {\n    data = JSON.parse(getLocalStorage('video-watch-history'))\n  } catch (error) {\n    console.error('Cannot parse video watch history from local storage: ', error)\n  }\n\n  data = data || {}\n\n  if (videoUUID) return data[videoUUID]\n\n  return data\n}\n\nfunction cleanupVideoWatch() {\n  const data = getStoredVideoWatchHistory()\n\n  const newData = Object.keys(data).reduce((acc, videoUUID) => {\n    const date = Date.parse(data[videoUUID].date)\n\n    const diff = Math.ceil(((new Date()).getTime() - date) / (1000 * 3600 * 24))\n\n    if (diff > 30) return acc\n\n    return {\n      ...acc,\n      [videoUUID]: data[videoUUID]\n    }\n  }, {})\n\n  setLocalStorage('video-watch-history', JSON.stringify(newData))\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  getStoredVolume,\n  getStoredP2PEnabled,\n  getStoredMute,\n  getStoredTheater,\n  saveVolumeInStore,\n  saveMuteInStore,\n  saveTheaterInStore,\n  saveAverageBandwidth,\n  getAverageBandwidthInStore,\n  saveLastSubtitle,\n  getStoredLastSubtitle,\n  saveVideoWatchHistory,\n  getStoredVideoWatchHistory,\n  cleanupVideoWatch\n}\n\n// ---------------------------------------------------------------------------\n\nconst KEY_PREFIX = 'peertube-videojs-'\n\nfunction getLocalStorage (key: string) {\n  try {\n    return localStorage.getItem(KEY_PREFIX + key)\n  } catch {\n    return undefined\n  }\n}\n\nfunction setLocalStorage (key: string, value: string) {\n  try {\n    localStorage.setItem(KEY_PREFIX + key, value)\n  } catch { /* empty */\n  }\n}\n","import { wait } from '@root-helpers/utils'\nimport { Segment } from 'p2p-media-loader-core'\nimport { basename } from 'path'\n\ntype SegmentsJSON = { [filename: string]: string | { [byterange: string]: string } }\n\nconst maxRetries = 3\n\nfunction segmentValidatorFactory (segmentsSha256Url: string, isLive: boolean) {\n  let segmentsJSON = fetchSha256Segments(segmentsSha256Url)\n  const regex = /bytes=(\\d+)-(\\d+)/\n\n  return async function segmentValidator (segment: Segment, _method: string, _peerId: string, retry = 1) {\n    // Wait for hash generation from the server\n    if (isLive) await wait(1000)\n\n    const filename = basename(segment.url)\n\n    const segmentValue = (await segmentsJSON)[filename]\n\n    if (!segmentValue && retry > maxRetries) {\n      throw new Error(`Unknown segment name ${filename} in segment validator`)\n    }\n\n    if (!segmentValue) {\n      console.log('Refetching sha segments for %s.', filename)\n\n      await wait(1000)\n\n      segmentsJSON = fetchSha256Segments(segmentsSha256Url)\n      await segmentValidator(segment, _method, _peerId, retry + 1)\n\n      return\n    }\n\n    let hashShouldBe: string\n    let range = ''\n\n    if (typeof segmentValue === 'string') {\n      hashShouldBe = segmentValue\n    } else {\n      const captured = regex.exec(segment.range)\n      range = captured[1] + '-' + captured[2]\n\n      hashShouldBe = segmentValue[range]\n    }\n\n    if (hashShouldBe === undefined) {\n      throw new Error(`Unknown segment name ${filename}/${range} in segment validator`)\n    }\n\n    const calculatedSha = await sha256Hex(segment.data)\n    if (calculatedSha !== hashShouldBe) {\n      throw new Error(\n        `Hashes does not correspond for segment ${filename}/${range}` +\n        `(expected: ${hashShouldBe} instead of ${calculatedSha})`\n      )\n    }\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  segmentValidatorFactory\n}\n\n// ---------------------------------------------------------------------------\n\nfunction fetchSha256Segments (url: string) {\n  return fetch(url)\n    .then(res => res.json() as Promise<SegmentsJSON>)\n    .catch(err => {\n      console.error('Cannot get sha256 segments', err)\n      return {}\n    })\n}\n\nasync function sha256Hex (data?: ArrayBuffer) {\n  if (!data) return undefined\n\n  if (window.crypto.subtle) {\n    return window.crypto.subtle.digest('SHA-256', data)\n      .then(data => bufferToHex(data))\n  }\n\n  // Fallback for non HTTPS context\n  const shaModule = await import('sha.js')\n  return new shaModule.sha256().update(Buffer.from(data)).digest('hex')\n}\n\n// Thanks: https://stackoverflow.com/a/53307879\nfunction bufferToHex (buffer?: ArrayBuffer) {\n  if (!buffer) return ''\n\n  let s = ''\n  const h = '0123456789abcdef'\n  const o = new Uint8Array(buffer)\n\n  o.forEach((v: any) => s += h[ v >> 4 ] + h[ v & 15 ])\n\n  return s\n}\n","import videojs from 'video.js'\n\nfunction getMainTemplate (options: any) {\n  return `\n    <div class=\"vjs-upnext-top\">\n      <span class=\"vjs-upnext-headtext\">${options.headText}</span>\n      <div class=\"vjs-upnext-title\"></div>\n    </div>\n    <div class=\"vjs-upnext-autoplay-icon\">\n      <svg height=\"100%\" version=\"1.1\" viewbox=\"0 0 98 98\" width=\"100%\">\n        <circle class=\"vjs-upnext-svg-autoplay-circle\" cx=\"49\" cy=\"49\" fill=\"#000\" fill-opacity=\"0.8\" r=\"48\"></circle>\n        <circle class=\"vjs-upnext-svg-autoplay-ring\" cx=\"-49\" cy=\"49\" fill-opacity=\"0\" r=\"46.5\" stroke=\"#FFFFFF\" stroke-width=\"4\" transform=\"rotate(-90)\"></circle>\n        <polygon class=\"vjs-upnext-svg-autoplay-triangle\" fill=\"#fff\" points=\"32,27 72,49 32,71\"></polygon></svg>\n    </div>\n    <span class=\"vjs-upnext-bottom\">\n      <span class=\"vjs-upnext-cancel\">\n        <button class=\"vjs-upnext-cancel-button\" tabindex=\"0\" aria-label=\"Cancel autoplay\">${options.cancelText}</button>\n      </span>\n      <span class=\"vjs-upnext-suspended\">${options.suspendedText}</span>\n    </span>\n  `\n}\n\nexport interface EndCardOptions extends videojs.ComponentOptions {\n  next: Function,\n  getTitle: () => string\n  timeout: number\n  cancelText: string\n  headText: string\n  suspendedText: string\n  condition: () => boolean\n  suspended: () => boolean\n}\n\nconst Component = videojs.getComponent('Component')\nclass EndCard extends Component {\n  options_: EndCardOptions\n\n  dashOffsetTotal = 586\n  dashOffsetStart = 293\n  interval = 50\n  upNextEvents = new videojs.EventTarget()\n  ticks = 0\n  totalTicks: number\n\n  container: HTMLDivElement\n  title: HTMLElement\n  autoplayRing: HTMLElement\n  cancelButton: HTMLElement\n  suspendedMessage: HTMLElement\n  nextButton: HTMLElement\n\n  constructor (player: videojs.Player, options: EndCardOptions) {\n    super(player, options)\n\n    this.totalTicks = this.options_.timeout / this.interval\n\n    player.on('ended', (_: any) => {\n      if (!this.options_.condition()) return\n\n      player.addClass('vjs-upnext--showing')\n      this.showCard((canceled: boolean) => {\n        player.removeClass('vjs-upnext--showing')\n        this.container.style.display = 'none'\n        if (!canceled) {\n          this.options_.next()\n        }\n      })\n    })\n\n    player.on('playing', () => {\n      this.upNextEvents.trigger('playing')\n    })\n  }\n\n  createEl () {\n    const container = super.createEl('div', {\n      className: 'vjs-upnext-content',\n      innerHTML: getMainTemplate(this.options_)\n    }) as HTMLDivElement\n\n    this.container = container\n    container.style.display = 'none'\n\n    this.autoplayRing = container.getElementsByClassName('vjs-upnext-svg-autoplay-ring')[0] as HTMLElement\n    this.title = container.getElementsByClassName('vjs-upnext-title')[0] as HTMLElement\n    this.cancelButton = container.getElementsByClassName('vjs-upnext-cancel-button')[0] as HTMLElement\n    this.suspendedMessage = container.getElementsByClassName('vjs-upnext-suspended')[0] as HTMLElement\n    this.nextButton = container.getElementsByClassName('vjs-upnext-autoplay-icon')[0] as HTMLElement\n\n    this.cancelButton.onclick = () => {\n      this.upNextEvents.trigger('cancel')\n    }\n\n    this.nextButton.onclick = () => {\n      this.upNextEvents.trigger('next')\n    }\n\n    return container\n  }\n\n  showCard (cb: Function) {\n    let timeout: any\n\n    this.autoplayRing.setAttribute('stroke-dasharray', '' + this.dashOffsetStart)\n    this.autoplayRing.setAttribute('stroke-dashoffset', '' + -this.dashOffsetStart)\n\n    this.title.innerHTML = this.options_.getTitle()\n\n    this.upNextEvents.one('cancel', () => {\n      clearTimeout(timeout)\n      cb(true)\n    })\n\n    this.upNextEvents.one('playing', () => {\n      clearTimeout(timeout)\n      cb(true)\n    })\n\n    this.upNextEvents.one('next', () => {\n      clearTimeout(timeout)\n      cb(false)\n    })\n\n    const goToPercent = (percent: number) => {\n      const newOffset = Math.max(-this.dashOffsetTotal, - this.dashOffsetStart - percent * this.dashOffsetTotal / 2 / 100)\n      this.autoplayRing.setAttribute('stroke-dashoffset', '' + newOffset)\n    }\n\n    const tick = () => {\n      goToPercent((this.ticks++) * 100 / this.totalTicks)\n    }\n\n    const update = () => {\n      if (this.options_.suspended()) {\n        this.suspendedMessage.innerText = this.options_.suspendedText\n        goToPercent(0)\n        this.ticks = 0\n        timeout = setTimeout(update.bind(this), 300) // checks once supsended can be a bit longer\n      } else if (this.ticks >= this.totalTicks) {\n        clearTimeout(timeout)\n        cb(false)\n      } else {\n        this.suspendedMessage.innerText = ''\n        tick()\n        timeout = setTimeout(update.bind(this), this.interval)\n      }\n    }\n\n    this.container.style.display = 'block'\n    timeout = setTimeout(update.bind(this), this.interval)\n  }\n}\n\nvideojs.registerComponent('EndCard', EndCard)\n","import videojs from 'video.js'\nimport { EndCardOptions } from './end-card'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass UpNextPlugin extends Plugin {\n\n  constructor (player: videojs.Player, options: Partial<EndCardOptions> = {}) {\n    const settings = {\n      next: options.next,\n      getTitle: options.getTitle,\n      timeout: options.timeout || 5000,\n      cancelText: options.cancelText || 'Cancel',\n      headText: options.headText || 'Up Next',\n      suspendedText: options.suspendedText || 'Autoplay is suspended',\n      condition: options.condition,\n      suspended: options.suspended\n    }\n\n    super(player)\n\n    this.player.ready(() => {\n      player.addClass('vjs-upnext')\n    })\n\n    player.addChild('EndCard', settings)\n  }\n}\n\nvideojs.registerPlugin('upnext', UpNextPlugin)\nexport { UpNextPlugin }\n","import videojs from 'video.js'\n\nfunction getPauseBezel () {\n  return `\n  <div class=\"vjs-bezels-pause\">\n    <div class=\"vjs-bezel\" role=\"status\" aria-label=\"Pause\">\n      <div class=\"vjs-bezel-icon\">\n        <svg height=\"100%\" version=\"1.1\" viewBox=\"0 0 36 36\" width=\"100%\">\n          <use class=\"vjs-svg-shadow\" xlink:href=\"#vjs-id-1\"></use>\n          <path class=\"vjs-svg-fill\" d=\"M 12,26 16,26 16,10 12,10 z M 21,26 25,26 25,10 21,10 z\" id=\"vjs-id-1\"></path>\n        </svg>\n      </div>\n    </div>\n  </div>\n  `\n}\n\nfunction getPlayBezel () {\n  return `\n  <div class=\"vjs-bezels-play\">\n    <div class=\"vjs-bezel\" role=\"status\" aria-label=\"Play\">\n      <div class=\"vjs-bezel-icon\">\n        <svg height=\"100%\" version=\"1.1\" viewBox=\"0 0 36 36\" width=\"100%\">\n          <use class=\"vjs-svg-shadow\" xlink:href=\"#vjs-id-2\"></use>\n          <path class=\"vjs-svg-fill\" d=\"M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z\" id=\"ytp-id-2\"></path>\n        </svg>\n      </div>\n    </div>\n  </div>\n  `\n}\n\nconst Component = videojs.getComponent('Component')\nclass PauseBezel extends Component {\n  container: HTMLDivElement\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player, options)\n\n    player.on('pause', (_: any) => {\n      if (player.seeking() || player.ended()) return\n      this.container.innerHTML = getPauseBezel()\n      this.showBezel()\n    })\n\n    player.on('play', (_: any) => {\n      if (player.seeking()) return\n      this.container.innerHTML = getPlayBezel()\n      this.showBezel()\n    })\n  }\n\n  createEl () {\n    this.container = super.createEl('div', {\n      className: 'vjs-bezels-content'\n    }) as HTMLDivElement\n\n    this.container.style.display = 'none'\n\n    return this.container\n  }\n\n  showBezel () {\n    this.container.style.display = 'inherit'\n\n    setTimeout(() => {\n      this.container.style.display = 'none'\n    }, 500) // matching the animation duration\n  }\n}\n\nvideojs.registerComponent('PauseBezel', PauseBezel)\n","import videojs from 'video.js'\nimport './pause-bezel'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass BezelsPlugin extends Plugin {\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player)\n\n    this.player.ready(() => {\n      player.addClass('vjs-bezels')\n    })\n\n    player.addChild('PauseBezel', options)\n  }\n}\n\nvideojs.registerPlugin('bezels', BezelsPlugin)\n\nexport { BezelsPlugin }\n","// Thanks to Yanko Shterev: https://github.com/yshterev/videojs-settings-menu\nimport { toTitleCase } from '../utils'\nimport videojs from 'video.js'\nimport { SettingsButton } from './settings-menu-button'\nimport { SettingsDialog } from './settings-dialog'\nimport { SettingsPanel } from './settings-panel'\nimport { SettingsPanelChild } from './settings-panel-child'\n\nconst MenuItem = videojs.getComponent('MenuItem')\nconst component = videojs.getComponent('Component')\n\nexport interface SettingsMenuItemOptions extends videojs.MenuItemOptions {\n  entry: string\n  menuButton: SettingsButton\n}\n\nclass SettingsMenuItem extends MenuItem {\n  settingsButton: SettingsButton\n  dialog: SettingsDialog\n  mainMenu: videojs.Menu\n  panel: SettingsPanel\n  panelChild: SettingsPanelChild\n  panelChildEl: HTMLElement\n  size: number[]\n  menuToLoad: string\n  subMenu: SettingsButton\n\n  submenuClickHandler: typeof SettingsMenuItem.prototype.onSubmenuClick\n  transitionEndHandler: typeof SettingsMenuItem.prototype.onTransitionEnd\n\n  settingsSubMenuTitleEl_: HTMLElement\n  settingsSubMenuValueEl_: HTMLElement\n  settingsSubMenuEl_: HTMLElement\n\n  constructor (player: videojs.Player, options?: SettingsMenuItemOptions) {\n    super(player, options)\n\n    this.settingsButton = options.menuButton\n    this.dialog = this.settingsButton.dialog\n    this.mainMenu = this.settingsButton.menu\n    this.panel = this.dialog.getChild('settingsPanel')\n    this.panelChild = this.panel.getChild('settingsPanelChild')\n    this.panelChildEl = this.panelChild.el() as HTMLElement\n\n    this.size = null\n\n    // keep state of what menu type is loading next\n    this.menuToLoad = 'mainmenu'\n\n    const subMenuName = toTitleCase(options.entry)\n    const SubMenuComponent = videojs.getComponent(subMenuName)\n\n    if (!SubMenuComponent) {\n      throw new Error(`Component ${subMenuName} does not exist`)\n    }\n\n    const newOptions = Object.assign({}, options, { entry: options.menuButton, menuButton: this })\n\n    this.subMenu = new SubMenuComponent(this.player(), newOptions) as any // FIXME: typings\n    const subMenuClass = this.subMenu.buildCSSClass().split(' ')[ 0 ]\n    this.settingsSubMenuEl_.className += ' ' + subMenuClass\n\n    this.eventHandlers()\n\n    player.ready(() => {\n      // Voodoo magic for IOS\n      setTimeout(() => {\n        // Player was destroyed\n        if (!this.player_) return\n\n        this.build()\n\n        // Update on rate change\n        player.on('ratechange', this.submenuClickHandler)\n\n        if (subMenuName === 'CaptionsButton') {\n          // Hack to regenerate captions on HTTP fallback\n          player.on('captionsChanged', () => {\n            setTimeout(() => {\n              this.settingsSubMenuEl_.innerHTML = ''\n              this.settingsSubMenuEl_.appendChild(this.subMenu.menu.el())\n              this.update()\n              this.bindClickEvents()\n            }, 0)\n          })\n        }\n\n        this.reset()\n      }, 0)\n    })\n  }\n\n  eventHandlers () {\n    this.submenuClickHandler = this.onSubmenuClick.bind(this)\n    this.transitionEndHandler = this.onTransitionEnd.bind(this)\n  }\n\n  onSubmenuClick (event: any) {\n    let target = null\n\n    if (event.type === 'tap') {\n      target = event.target\n    } else {\n      target = event.currentTarget\n    }\n\n    if (target && target.classList.contains('vjs-back-button')) {\n      this.loadMainMenu()\n      return\n    }\n\n    // To update the sub menu value on click, setTimeout is needed because\n    // updating the value is not instant\n    setTimeout(() => this.update(event), 0)\n\n    // Seems like videojs adds a vjs-hidden class on the caption menu after a click\n    // We don't need it\n    this.subMenu.menu.removeClass('vjs-hidden')\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   * @method createEl\n   */\n  createEl () {\n    const el = videojs.dom.createEl('li', {\n      className: 'vjs-menu-item'\n    })\n\n    this.settingsSubMenuTitleEl_ = videojs.dom.createEl('div', {\n      className: 'vjs-settings-sub-menu-title'\n    }) as HTMLElement\n\n    el.appendChild(this.settingsSubMenuTitleEl_)\n\n    this.settingsSubMenuValueEl_ = videojs.dom.createEl('div', {\n      className: 'vjs-settings-sub-menu-value'\n    }) as HTMLElement\n\n    el.appendChild(this.settingsSubMenuValueEl_)\n\n    this.settingsSubMenuEl_ = videojs.dom.createEl('div', {\n      className: 'vjs-settings-sub-menu'\n    }) as HTMLElement\n\n    return el as HTMLLIElement\n  }\n\n  /**\n   * Handle click on menu item\n   *\n   * @method handleClick\n   */\n  handleClick (event: videojs.EventTarget.Event) {\n    this.menuToLoad = 'submenu'\n    // Remove open class to ensure only the open submenu gets this class\n    videojs.dom.removeClass(this.el(), 'open')\n\n    super.handleClick(event);\n\n    (this.mainMenu.el() as HTMLElement).style.opacity = '0'\n    // Whether to add or remove vjs-hidden class on the settingsSubMenuEl element\n    if (videojs.dom.hasClass(this.settingsSubMenuEl_, 'vjs-hidden')) {\n      videojs.dom.removeClass(this.settingsSubMenuEl_, 'vjs-hidden')\n\n      // animation not played without timeout\n      setTimeout(() => {\n        this.settingsSubMenuEl_.style.opacity = '1'\n        this.settingsSubMenuEl_.style.marginRight = '0px'\n      }, 0)\n\n      this.settingsButton.setDialogSize(this.size)\n    } else {\n      videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n    }\n  }\n\n  /**\n   * Create back button\n   *\n   * @method createBackButton\n   */\n  createBackButton () {\n    const button = this.subMenu.menu.addChild('MenuItem', {}, 0)\n\n    button.addClass('vjs-back-button');\n    (button.el() as HTMLElement).innerHTML = this.player().localize(this.subMenu.controlText())\n  }\n\n  /**\n   * Add/remove prefixed event listener for CSS Transition\n   *\n   * @method PrefixedEvent\n   */\n  PrefixedEvent (element: any, type: any, callback: any, action = 'addEvent') {\n    const prefix = [ 'webkit', 'moz', 'MS', 'o', '' ]\n\n    for (let p = 0; p < prefix.length; p++) {\n      if (!prefix[ p ]) {\n        type = type.toLowerCase()\n      }\n\n      if (action === 'addEvent') {\n        element.addEventListener(prefix[ p ] + type, callback, false)\n      } else if (action === 'removeEvent') {\n        element.removeEventListener(prefix[ p ] + type, callback, false)\n      }\n    }\n  }\n\n  onTransitionEnd (event: any) {\n    if (event.propertyName !== 'margin-right') {\n      return\n    }\n\n    if (this.menuToLoad === 'mainmenu') {\n      // hide submenu\n      videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n\n      // reset opacity to 0\n      this.settingsSubMenuEl_.style.opacity = '0'\n    }\n  }\n\n  reset () {\n    videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n    this.settingsSubMenuEl_.style.opacity = '0'\n    this.setMargin()\n  }\n\n  loadMainMenu () {\n    const mainMenuEl = this.mainMenu.el() as HTMLElement\n    this.menuToLoad = 'mainmenu'\n    this.mainMenu.show()\n    mainMenuEl.style.opacity = '0'\n\n    // back button will always take you to main menu, so set dialog sizes\n    const mainMenuAny = this.mainMenu as any\n    this.settingsButton.setDialogSize([ mainMenuAny.width, mainMenuAny.height ])\n\n    // animation not triggered without timeout (some async stuff ?!?)\n    setTimeout(() => {\n      // animate margin and opacity before hiding the submenu\n      // this triggers CSS Transition event\n      this.setMargin()\n      mainMenuEl.style.opacity = '1'\n    }, 0)\n  }\n\n  build () {\n    this.subMenu.on('updateLabel', () => {\n      this.update()\n    })\n    this.subMenu.on('menuChanged', () => {\n      this.bindClickEvents()\n      this.setSize()\n      this.update()\n    })\n\n    this.settingsSubMenuTitleEl_.innerHTML = this.player().localize(this.subMenu.controlText())\n    this.settingsSubMenuEl_.appendChild(this.subMenu.menu.el())\n    this.panelChildEl.appendChild(this.settingsSubMenuEl_)\n    this.update()\n\n    this.createBackButton()\n    this.setSize()\n    this.bindClickEvents()\n\n    // prefixed event listeners for CSS TransitionEnd\n    this.PrefixedEvent(\n      this.settingsSubMenuEl_,\n      'TransitionEnd',\n      this.transitionEndHandler,\n      'addEvent'\n    )\n  }\n\n  update (event?: any) {\n    let target: HTMLElement = null\n    const subMenu = this.subMenu.name()\n\n    if (event && event.type === 'tap') {\n      target = event.target\n    } else if (event) {\n      target = event.currentTarget\n    }\n\n    // Playback rate menu button doesn't get a vjs-selected class\n    // or sets options_['selected'] on the selected playback rate.\n    // Thus we get the submenu value based on the labelEl of playbackRateMenuButton\n    if (subMenu === 'PlaybackRateMenuButton') {\n      const html = (this.subMenu as any).labelEl_.innerHTML\n      setTimeout(() => this.settingsSubMenuValueEl_.innerHTML = html, 250)\n    } else {\n      // Loop trough the submenu items to find the selected child\n      for (const subMenuItem of this.subMenu.menu.children_) {\n        if (!(subMenuItem instanceof component)) {\n          continue\n        }\n\n        if (subMenuItem.hasClass('vjs-selected')) {\n          const subMenuItemUntyped = subMenuItem as any\n\n          // Prefer to use the function\n          if (typeof subMenuItemUntyped.getLabel === 'function') {\n            this.settingsSubMenuValueEl_.innerHTML = subMenuItemUntyped.getLabel()\n            break\n          }\n\n          this.settingsSubMenuValueEl_.innerHTML = subMenuItemUntyped.options_.label\n        }\n      }\n    }\n\n    if (target && !target.classList.contains('vjs-back-button')) {\n      this.settingsButton.hideDialog()\n    }\n  }\n\n  bindClickEvents () {\n    for (const item of this.subMenu.menu.children()) {\n      if (!(item instanceof component)) {\n        continue\n      }\n      item.on([ 'tap', 'click' ], this.submenuClickHandler)\n    }\n  }\n\n  // save size of submenus on first init\n  // if number of submenu items change dynamically more logic will be needed\n  setSize () {\n    this.dialog.removeClass('vjs-hidden')\n    videojs.dom.removeClass(this.settingsSubMenuEl_, 'vjs-hidden')\n    this.size = this.settingsButton.getComponentSize(this.settingsSubMenuEl_)\n    this.setMargin()\n    this.dialog.addClass('vjs-hidden')\n    videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n  }\n\n  setMargin () {\n    if (!this.size) return\n\n    const [ width ] = this.size\n\n    this.settingsSubMenuEl_.style.marginRight = `-${width}px`\n  }\n\n  /**\n   * Hide the sub menu\n   */\n  hideSubMenu () {\n    // after removing settings item this.el_ === null\n    if (!this.el()) {\n      return\n    }\n\n    if (videojs.dom.hasClass(this.el(), 'open')) {\n      videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n      videojs.dom.removeClass(this.el(), 'open')\n    }\n  }\n\n}\n\n(SettingsMenuItem as any).prototype.contentElType = 'button'\nvideojs.registerComponent('SettingsMenuItem', SettingsMenuItem)\n\nexport { SettingsMenuItem }\n","// Thanks to Yanko Shterev: https://github.com/yshterev/videojs-settings-menu\nimport { SettingsMenuItem } from './settings-menu-item'\nimport { toTitleCase } from '../utils'\nimport videojs from 'video.js'\n\nimport { SettingsDialog } from './settings-dialog'\nimport { SettingsPanel } from './settings-panel'\nimport { SettingsPanelChild } from './settings-panel-child'\n\nconst Button = videojs.getComponent('Button')\nconst Menu = videojs.getComponent('Menu')\nconst Component = videojs.getComponent('Component')\n\nexport interface SettingsButtonOptions extends videojs.ComponentOptions {\n  entries: any[]\n  setup?: {\n    maxHeightOffset: number\n  }\n}\n\nclass SettingsButton extends Button {\n  dialog: SettingsDialog\n  dialogEl: HTMLElement\n  menu: videojs.Menu\n  panel: SettingsPanel\n  panelChild: SettingsPanelChild\n\n  addSettingsItemHandler: typeof SettingsButton.prototype.onAddSettingsItem\n  disposeSettingsItemHandler: typeof SettingsButton.prototype.onDisposeSettingsItem\n  playerClickHandler: typeof SettingsButton.prototype.onPlayerClick\n  userInactiveHandler: typeof SettingsButton.prototype.onUserInactive\n\n  private settingsButtonOptions: SettingsButtonOptions\n\n  constructor (player: videojs.Player, options?: SettingsButtonOptions) {\n    super(player, options)\n\n    this.settingsButtonOptions = options\n\n    this.controlText('Settings')\n\n    this.dialog = this.player().addChild('settingsDialog')\n    this.dialogEl = this.dialog.el() as HTMLElement\n    this.menu = null\n    this.panel = this.dialog.addChild('settingsPanel')\n    this.panelChild = this.panel.addChild('settingsPanelChild')\n\n    this.addClass('vjs-settings')\n    this.el().setAttribute('aria-label', 'Settings Button')\n\n    // Event handlers\n    this.addSettingsItemHandler = this.onAddSettingsItem.bind(this)\n    this.disposeSettingsItemHandler = this.onDisposeSettingsItem.bind(this)\n    this.playerClickHandler = this.onPlayerClick.bind(this)\n    this.userInactiveHandler = this.onUserInactive.bind(this)\n\n    this.buildMenu()\n    this.bindEvents()\n\n    // Prepare the dialog\n    this.player().one('play', () => this.hideDialog())\n  }\n\n  onPlayerClick (event: MouseEvent) {\n    const element = event.target as HTMLElement\n    if (element.classList.contains('vjs-settings') || element.parentElement.classList.contains('vjs-settings')) {\n      return\n    }\n\n    if (!this.dialog.hasClass('vjs-hidden')) {\n      this.hideDialog()\n    }\n  }\n\n  onDisposeSettingsItem (event: any, name: string) {\n    if (name === undefined) {\n      const children = this.menu.children()\n\n      while (children.length > 0) {\n        children[0].dispose()\n        this.menu.removeChild(children[0])\n      }\n\n      this.addClass('vjs-hidden')\n    } else {\n      const item = this.menu.getChild(name)\n\n      if (item) {\n        item.dispose()\n        this.menu.removeChild(item)\n      }\n    }\n\n    this.hideDialog()\n\n    if (this.settingsButtonOptions.entries.length === 0) {\n      this.addClass('vjs-hidden')\n    }\n  }\n\n  onAddSettingsItem (event: any, data: any) {\n    const [ entry, options ] = data\n\n    this.addMenuItem(entry, options)\n    this.removeClass('vjs-hidden')\n  }\n\n  onUserInactive () {\n    if (!this.dialog.hasClass('vjs-hidden')) {\n      this.hideDialog()\n    }\n  }\n\n  bindEvents () {\n    this.player().on('click', this.playerClickHandler)\n    this.player().on('addsettingsitem', this.addSettingsItemHandler)\n    this.player().on('disposesettingsitem', this.disposeSettingsItemHandler)\n    this.player().on('userinactive', this.userInactiveHandler)\n  }\n\n  buildCSSClass () {\n    return `vjs-icon-settings ${super.buildCSSClass()}`\n  }\n\n  handleClick () {\n    if (this.dialog.hasClass('vjs-hidden')) {\n      this.showDialog()\n    } else {\n      this.hideDialog()\n    }\n  }\n\n  showDialog () {\n    this.player().peertube().onMenuOpen();\n\n    (this.menu.el() as HTMLElement).style.opacity = '1'\n    this.dialog.show()\n\n    this.setDialogSize(this.getComponentSize(this.menu))\n  }\n\n  hideDialog () {\n    this.player_.peertube().onMenuClosed()\n\n    this.dialog.hide()\n    this.setDialogSize(this.getComponentSize(this.menu));\n    (this.menu.el() as HTMLElement).style.opacity = '1'\n    this.resetChildren()\n  }\n\n  getComponentSize (element: videojs.Component | HTMLElement) {\n    let width: number = null\n    let height: number = null\n\n    // Could be component or just DOM element\n    if (element instanceof Component) {\n      const el = element.el() as HTMLElement\n\n      width = el.offsetWidth\n      height = el.offsetHeight;\n\n      (element as any).width = width;\n      (element as any).height = height\n    } else {\n      width = element.offsetWidth\n      height = element.offsetHeight\n    }\n\n    return [ width, height ]\n  }\n\n  setDialogSize ([ width, height ]: number[]) {\n    if (typeof height !== 'number') {\n      return\n    }\n\n    const offset = this.settingsButtonOptions.setup.maxHeightOffset\n    const maxHeight = (this.player().el() as HTMLElement).offsetHeight - offset // FIXME: typings\n\n    const panelEl = this.panel.el() as HTMLElement\n\n    if (height > maxHeight) {\n      height = maxHeight\n      width += 17\n      panelEl.style.maxHeight = `${height}px`\n    } else if (panelEl.style.maxHeight !== '') {\n      panelEl.style.maxHeight = ''\n    }\n\n    this.dialogEl.style.width = `${width}px`\n    this.dialogEl.style.height = `${height}px`\n  }\n\n  buildMenu () {\n    this.menu = new Menu(this.player())\n    this.menu.addClass('vjs-main-menu')\n    const entries = this.settingsButtonOptions.entries\n\n    if (entries.length === 0) {\n      this.addClass('vjs-hidden')\n      this.panelChild.addChild(this.menu)\n      return\n    }\n\n    for (const entry of entries) {\n      this.addMenuItem(entry, this.settingsButtonOptions)\n    }\n\n    this.panelChild.addChild(this.menu)\n  }\n\n  addMenuItem (entry: any, options: any) {\n    const openSubMenu = function (this: any) {\n      if (videojs.dom.hasClass(this.el_, 'open')) {\n        videojs.dom.removeClass(this.el_, 'open')\n      } else {\n        videojs.dom.addClass(this.el_, 'open')\n      }\n    }\n\n    options.name = toTitleCase(entry)\n\n    const newOptions = Object.assign({}, options, { entry, menuButton: this })\n    const settingsMenuItem = new SettingsMenuItem(this.player(), newOptions)\n\n    this.menu.addChild(settingsMenuItem)\n\n    // Hide children to avoid sub menus stacking on top of each other\n    // or having multiple menus open\n    settingsMenuItem.on('click', videojs.bind(this, this.hideChildren))\n\n    // Whether to add or remove selected class on the settings sub menu element\n    settingsMenuItem.on('click', openSubMenu)\n  }\n\n  resetChildren () {\n    for (const menuChild of this.menu.children()) {\n      (menuChild as SettingsMenuItem).reset()\n    }\n  }\n\n  /**\n   * Hide all the sub menus\n   */\n  hideChildren () {\n    for (const menuChild of this.menu.children()) {\n      (menuChild as SettingsMenuItem).hideSubMenu()\n    }\n  }\n\n}\n\nComponent.registerComponent('SettingsButton', SettingsButton)\n\nexport { SettingsButton }\n","import videojs from 'video.js'\nimport './videojs-components/settings-menu-button'\nimport {\n  PeerTubePluginOptions,\n  ResolutionUpdateData,\n  UserWatching,\n  VideoJSCaption\n} from './peertube-videojs-typings'\nimport { isMobile, timeToInt } from './utils'\nimport {\n  getStoredLastSubtitle,\n  getStoredMute,\n  getStoredVolume,\n  saveLastSubtitle,\n  saveMuteInStore,\n  saveVideoWatchHistory,\n  saveVolumeInStore\n} from './peertube-player-local-storage'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass PeerTubePlugin extends Plugin {\n  private readonly videoViewUrl: string\n  private readonly videoDuration: number\n  private readonly CONSTANTS = {\n    USER_WATCHING_VIDEO_INTERVAL: 5000 // Every 5 seconds, notify the user is watching the video\n  }\n\n  private videoCaptions: VideoJSCaption[]\n  private defaultSubtitle: string\n\n  private videoViewInterval: any\n  private userWatchingVideoInterval: any\n  private lastResolutionChange: ResolutionUpdateData\n\n  private isLive: boolean\n\n  private menuOpened = false\n  private mouseInControlBar = false\n  private readonly savedInactivityTimeout: number\n\n  constructor (player: videojs.Player, options?: PeerTubePluginOptions) {\n    super(player)\n\n    this.videoViewUrl = options.videoViewUrl\n    this.videoDuration = options.videoDuration\n    this.videoCaptions = options.videoCaptions\n    this.isLive = options.isLive\n\n    this.savedInactivityTimeout = player.options_.inactivityTimeout\n\n    if (options.autoplay) this.player.addClass('vjs-has-autoplay')\n\n    this.player.on('autoplay-failure', () => {\n      this.player.removeClass('vjs-has-autoplay')\n    })\n\n    this.player.ready(() => {\n      const playerOptions = this.player.options_\n\n      if (options.mode === 'webtorrent') {\n        this.player.webtorrent().on('resolutionChange', (_: any, d: any) => this.handleResolutionChange(d))\n        this.player.webtorrent().on('autoResolutionChange', (_: any, d: any) => this.trigger('autoResolutionChange', d))\n      }\n\n      if (options.mode === 'p2p-media-loader') {\n        this.player.p2pMediaLoader().on('resolutionChange', (_: any, d: any) => this.handleResolutionChange(d))\n      }\n\n      this.player.tech(true).on('loadedqualitydata', () => {\n        setTimeout(() => {\n          // Replay a resolution change, now we loaded all quality data\n          if (this.lastResolutionChange) this.handleResolutionChange(this.lastResolutionChange)\n        }, 0)\n      })\n\n      const volume = getStoredVolume()\n      if (volume !== undefined) this.player.volume(volume)\n\n      const muted = playerOptions.muted !== undefined ? playerOptions.muted : getStoredMute()\n      if (muted !== undefined) this.player.muted(muted)\n\n      this.defaultSubtitle = options.subtitle || getStoredLastSubtitle()\n\n      this.player.on('volumechange', () => {\n        saveVolumeInStore(this.player.volume())\n        saveMuteInStore(this.player.muted())\n      })\n\n      if (options.stopTime) {\n        const stopTime = timeToInt(options.stopTime)\n        const self = this\n\n        this.player.on('timeupdate', function onTimeUpdate () {\n          if (self.player.currentTime() > stopTime) {\n            self.player.pause()\n            self.player.trigger('stopped')\n\n            self.player.off('timeupdate', onTimeUpdate)\n          }\n        })\n      }\n\n      this.player.textTracks().on('change', () => {\n        const showing = this.player.textTracks().tracks_.find(t => {\n          return t.kind === 'captions' && t.mode === 'showing'\n        })\n\n        if (!showing) {\n          saveLastSubtitle('off')\n          return\n        }\n\n        saveLastSubtitle(showing.language)\n      })\n\n      this.player.on('sourcechange', () => this.initCaptions())\n\n      this.player.duration(options.videoDuration)\n\n      this.initializePlayer()\n      this.runViewAdd()\n\n      this.runUserWatchVideo(options.userWatching, options.videoUUID)\n    })\n  }\n\n  dispose () {\n    if (this.videoViewInterval) clearInterval(this.videoViewInterval)\n    if (this.userWatchingVideoInterval) clearInterval(this.userWatchingVideoInterval)\n  }\n\n  onMenuOpen () {\n    this.menuOpened = false\n    this.alterInactivity()\n  }\n\n  onMenuClosed () {\n    this.menuOpened = true\n    this.alterInactivity()\n  }\n\n  private initializePlayer () {\n    if (isMobile()) this.player.addClass('vjs-is-mobile')\n\n    this.initSmoothProgressBar()\n\n    this.initCaptions()\n\n    this.listenControlBarMouse()\n  }\n\n  private runViewAdd () {\n    this.clearVideoViewInterval()\n\n    // After 30 seconds (or 3/4 of the video), add a view to the video\n    let minSecondsToView = 30\n\n    if (!this.isLive && this.videoDuration < minSecondsToView) {\n      minSecondsToView = (this.videoDuration * 3) / 4\n    }\n\n    let secondsViewed = 0\n    this.videoViewInterval = setInterval(() => {\n      if (this.player && !this.player.paused()) {\n        secondsViewed += 1\n\n        if (secondsViewed > minSecondsToView) {\n          // Restart the loop if this is a live\n          if (this.isLive) {\n            secondsViewed = 0\n          } else {\n            this.clearVideoViewInterval()\n          }\n\n          this.addViewToVideo().catch(err => console.error(err))\n        }\n      }\n    }, 1000)\n  }\n\n  private runUserWatchVideo (options: UserWatching, videoUUID: string) {\n    let lastCurrentTime = 0\n\n    this.userWatchingVideoInterval = setInterval(() => {\n      const currentTime = Math.floor(this.player.currentTime())\n\n      if (currentTime - lastCurrentTime >= 1) {\n        lastCurrentTime = currentTime\n\n        if (options) {\n          this.notifyUserIsWatching(currentTime, options.url, options.authorizationHeader)\n            .catch(err => console.error('Cannot notify user is watching.', err))\n        } else {\n          saveVideoWatchHistory(videoUUID, currentTime)\n        }\n      }\n    }, this.CONSTANTS.USER_WATCHING_VIDEO_INTERVAL)\n  }\n\n  private clearVideoViewInterval () {\n    if (this.videoViewInterval !== undefined) {\n      clearInterval(this.videoViewInterval)\n      this.videoViewInterval = undefined\n    }\n  }\n\n  private addViewToVideo () {\n    if (!this.videoViewUrl) return Promise.resolve(undefined)\n\n    return fetch(this.videoViewUrl, { method: 'POST' })\n  }\n\n  private notifyUserIsWatching (currentTime: number, url: string, authorizationHeader: string) {\n    const body = new URLSearchParams()\n    body.append('currentTime', currentTime.toString())\n\n    const headers = new Headers({ 'Authorization': authorizationHeader })\n\n    return fetch(url, { method: 'PUT', body, headers })\n  }\n\n  private handleResolutionChange (data: ResolutionUpdateData) {\n    this.lastResolutionChange = data\n\n    const qualityLevels = this.player.qualityLevels()\n\n    for (let i = 0; i < qualityLevels.length; i++) {\n      if (qualityLevels[i].height === data.resolutionId) {\n        data.id = qualityLevels[i].id\n        break\n      }\n    }\n\n    this.trigger('resolutionChange', data)\n  }\n\n  private listenControlBarMouse () {\n    this.player.controlBar.on('mouseenter', () => {\n      this.mouseInControlBar = true\n      this.alterInactivity()\n    })\n\n    this.player.controlBar.on('mouseleave', () => {\n      this.mouseInControlBar = false\n      this.alterInactivity()\n    })\n  }\n\n  private alterInactivity () {\n    if (this.menuOpened) {\n      this.player.options_.inactivityTimeout = this.savedInactivityTimeout\n      return\n    }\n\n    if (!this.mouseInControlBar && !this.isTouchEnabled()) {\n      this.player.options_.inactivityTimeout = 1\n    }\n  }\n\n  private isTouchEnabled () {\n    return ('ontouchstart' in window) ||\n      navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0\n  }\n\n  private initCaptions () {\n    for (const caption of this.videoCaptions) {\n      this.player.addRemoteTextTrack({\n        kind: 'captions',\n        label: caption.label,\n        language: caption.language,\n        id: caption.language,\n        src: caption.src,\n        default: this.defaultSubtitle === caption.language\n      }, false)\n    }\n\n    this.player.trigger('captionsChanged')\n  }\n\n  // Thanks: https://github.com/videojs/video.js/issues/4460#issuecomment-312861657\n  private initSmoothProgressBar () {\n    const SeekBar = videojs.getComponent('SeekBar') as any\n    SeekBar.prototype.getPercent = function getPercent () {\n      // Allows for smooth scrubbing, when player can't keep up.\n      // const time = (this.player_.scrubbing()) ?\n      //   this.player_.getCache().currentTime :\n      //   this.player_.currentTime()\n      const time = this.player_.currentTime()\n      const percent = time / this.player_.duration()\n      return percent >= 1 ? 1 : percent\n    }\n    SeekBar.prototype.handleMouseMove = function handleMouseMove (event: any) {\n      let newTime = this.calculateDistance(event) * this.player_.duration()\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1\n      }\n      this.player_.currentTime(newTime)\n      this.update()\n    }\n  }\n}\n\nvideojs.registerPlugin('peertube', PeerTubePlugin)\nexport { PeerTubePlugin }\n","import videojs from 'video.js'\nimport { NextPreviousVideoButtonOptions } from '../peertube-videojs-typings'\n\nconst Button = videojs.getComponent('Button')\n\nclass NextPreviousVideoButton extends Button {\n  private readonly nextPreviousVideoButtonOptions: NextPreviousVideoButtonOptions\n\n  constructor (player: videojs.Player, options?: NextPreviousVideoButtonOptions) {\n    super(player, options as any)\n\n    this.nextPreviousVideoButtonOptions = options\n\n    this.update()\n  }\n\n  createEl () {\n    const type = (this.options_ as NextPreviousVideoButtonOptions).type\n\n    const button = videojs.dom.createEl('button', {\n      className: 'vjs-' + type + '-video'\n    }) as HTMLButtonElement\n    const nextIcon = videojs.dom.createEl('span', {\n      className: 'icon icon-' + type\n    })\n    button.appendChild(nextIcon)\n\n    if (type === 'next') {\n      button.title = this.player_.localize('Next video')\n    } else {\n      button.title = this.player_.localize('Previous video')\n    }\n\n    return button\n  }\n\n  handleClick () {\n    this.nextPreviousVideoButtonOptions.handler()\n  }\n\n  update () {\n    const disabled = this.nextPreviousVideoButtonOptions.isDisabled()\n\n    if (disabled) this.addClass('vjs-disabled')\n    else this.removeClass('vjs-disabled')\n  }\n}\n\nvideojs.registerComponent('NextVideoButton', NextPreviousVideoButton)\nvideojs.registerComponent('PreviousVideoButton', NextPreviousVideoButton)\n","import { PlayerNetworkInfo } from '../peertube-videojs-typings'\nimport videojs from 'video.js'\nimport { bytes } from '../utils'\n\nconst Button = videojs.getComponent('Button')\nclass P2pInfoButton extends Button {\n\n  createEl () {\n    const div = videojs.dom.createEl('div', {\n      className: 'vjs-peertube'\n    })\n    const subDivWebtorrent = videojs.dom.createEl('div', {\n      className: 'vjs-peertube-hidden' // Hide the stats before we get the info\n    }) as HTMLDivElement\n    div.appendChild(subDivWebtorrent)\n\n    const downloadIcon = videojs.dom.createEl('span', {\n      className: 'icon icon-download'\n    })\n    subDivWebtorrent.appendChild(downloadIcon)\n\n    const downloadSpeedText = videojs.dom.createEl('span', {\n      className: 'download-speed-text'\n    })\n    const downloadSpeedNumber = videojs.dom.createEl('span', {\n      className: 'download-speed-number'\n    })\n    const downloadSpeedUnit = videojs.dom.createEl('span')\n    downloadSpeedText.appendChild(downloadSpeedNumber)\n    downloadSpeedText.appendChild(downloadSpeedUnit)\n    subDivWebtorrent.appendChild(downloadSpeedText)\n\n    const uploadIcon = videojs.dom.createEl('span', {\n      className: 'icon icon-upload'\n    })\n    subDivWebtorrent.appendChild(uploadIcon)\n\n    const uploadSpeedText = videojs.dom.createEl('span', {\n      className: 'upload-speed-text'\n    })\n    const uploadSpeedNumber = videojs.dom.createEl('span', {\n      className: 'upload-speed-number'\n    })\n    const uploadSpeedUnit = videojs.dom.createEl('span')\n    uploadSpeedText.appendChild(uploadSpeedNumber)\n    uploadSpeedText.appendChild(uploadSpeedUnit)\n    subDivWebtorrent.appendChild(uploadSpeedText)\n\n    const peersText = videojs.dom.createEl('span', {\n      className: 'peers-text'\n    })\n    const peersNumber = videojs.dom.createEl('span', {\n      className: 'peers-number'\n    })\n    subDivWebtorrent.appendChild(peersNumber)\n    subDivWebtorrent.appendChild(peersText)\n\n    const subDivHttp = videojs.dom.createEl('div', {\n      className: 'vjs-peertube-hidden'\n    })\n    const subDivHttpText = videojs.dom.createEl('span', {\n      className: 'http-fallback',\n      textContent: 'HTTP'\n    })\n\n    subDivHttp.appendChild(subDivHttpText)\n    div.appendChild(subDivHttp)\n\n    this.player_.on('p2pInfo', (event: any, data: PlayerNetworkInfo) => {\n      // We are in HTTP fallback\n      if (!data) {\n        subDivHttp.className = 'vjs-peertube-displayed'\n        subDivWebtorrent.className = 'vjs-peertube-hidden'\n\n        return\n      }\n\n      const p2pStats = data.p2p\n      const httpStats = data.http\n\n      const downloadSpeed = bytes(p2pStats.downloadSpeed + httpStats.downloadSpeed)\n      const uploadSpeed = bytes(p2pStats.uploadSpeed + httpStats.uploadSpeed)\n      const totalDownloaded = bytes(p2pStats.downloaded + httpStats.downloaded)\n      const totalUploaded = bytes(p2pStats.uploaded + httpStats.uploaded)\n      const numPeers = p2pStats.numPeers\n\n      subDivWebtorrent.title = this.player().localize('Total downloaded: ') + totalDownloaded.join(' ') + '\\n'\n\n      if (data.source === 'p2p-media-loader') {\n        const downloadedFromServer = bytes(httpStats.downloaded).join(' ')\n        const downloadedFromPeers = bytes(p2pStats.downloaded).join(' ')\n\n        subDivWebtorrent.title +=\n          ' * ' + this.player().localize('From servers: ') + downloadedFromServer + '\\n' +\n          ' * ' + this.player().localize('From peers: ') + downloadedFromPeers + '\\n'\n      }\n      subDivWebtorrent.title += this.player().localize('Total uploaded: ') + totalUploaded.join(' ')\n\n      downloadSpeedNumber.textContent = downloadSpeed[ 0 ]\n      downloadSpeedUnit.textContent = ' ' + downloadSpeed[ 1 ]\n\n      uploadSpeedNumber.textContent = uploadSpeed[ 0 ]\n      uploadSpeedUnit.textContent = ' ' + uploadSpeed[ 1 ]\n\n      peersNumber.textContent = numPeers.toString()\n      peersText.textContent = ' ' + (numPeers > 1 ? this.player().localize('peers') : this.player_.localize('peer'))\n\n      subDivHttp.className = 'vjs-peertube-hidden'\n      subDivWebtorrent.className = 'vjs-peertube-displayed'\n    })\n\n    return div as HTMLButtonElement\n  }\n}\n\nvideojs.registerComponent('P2PInfoButton', P2pInfoButton)\n","import { buildVideoLink } from '../utils'\nimport videojs from 'video.js'\n\nconst Button = videojs.getComponent('Button')\nclass PeerTubeLinkButton extends Button {\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player, options)\n  }\n\n  createEl () {\n    return this.buildElement()\n  }\n\n  updateHref () {\n    this.el().setAttribute('href', buildVideoLink({ startTime: this.player().currentTime() }))\n  }\n\n  handleClick () {\n    this.player().pause()\n  }\n\n  private buildElement () {\n    const el = videojs.dom.createEl('a', {\n      href: buildVideoLink(),\n      innerHTML: 'PeerTube',\n      title: this.player().localize('Video page (new window)'),\n      className: 'vjs-peertube-link',\n      target: '_blank'\n    })\n\n    el.addEventListener('mouseenter', () => this.updateHref())\n\n    return el as HTMLButtonElement\n  }\n}\n\nvideojs.registerComponent('PeerTubeLinkButton', PeerTubeLinkButton)\n","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\n\nclass PeerTubeLoadProgressBar extends Component {\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player, options)\n\n    this.on(player, 'progress', this.update)\n  }\n\n  createEl () {\n    return super.createEl('div', {\n      className: 'vjs-load-progress',\n      innerHTML: `<span class=\"vjs-control-text\"><span>${this.localize('Loaded')}</span>: 0%</span>`\n    })\n  }\n\n  dispose () {\n    super.dispose()\n  }\n\n  update () {\n    const torrent = this.player().webtorrent().getTorrent()\n    if (!torrent) return\n\n    // FIXME: typings\n    (this.el() as HTMLElement).style.width = (torrent.progress * 100) + '%'\n  }\n\n}\n\nComponent.registerComponent('PeerTubeLoadProgressBar', PeerTubeLoadProgressBar)\n","import videojs from 'video.js'\nimport { AutoResolutionUpdateData, ResolutionUpdateData } from '../peertube-videojs-typings'\n\nconst MenuItem = videojs.getComponent('MenuItem')\n\nexport interface ResolutionMenuItemOptions extends videojs.MenuItemOptions {\n  labels?: { [id: number]: string }\n  id: number\n  callback: Function\n}\n\nclass ResolutionMenuItem extends MenuItem {\n  private readonly resolutionId: number\n  private readonly label: string\n  // Only used for the automatic item\n  private readonly labels: { [id: number]: string }\n  private readonly callback: Function\n\n  private autoResolutionPossible: boolean\n  private currentResolutionLabel: string\n\n  constructor (player: videojs.Player, options?: ResolutionMenuItemOptions) {\n    options.selectable = true\n\n    super(player, options)\n\n    this.autoResolutionPossible = true\n    this.currentResolutionLabel = ''\n\n    this.resolutionId = options.id\n    this.label = options.label\n    this.labels = options.labels\n    this.callback = options.callback\n\n    player.peertube().on('resolutionChange', (_: any, data: ResolutionUpdateData) => this.updateSelection(data))\n\n    // We only want to disable the \"Auto\" item\n    if (this.resolutionId === -1) {\n      player.peertube().on('autoResolutionChange', (_: any, data: AutoResolutionUpdateData) => this.updateAutoResolution(data))\n    }\n  }\n\n  handleClick (event: any) {\n    // Auto button disabled?\n    if (this.autoResolutionPossible === false && this.resolutionId === -1) return\n\n    super.handleClick(event)\n\n    this.callback(this.resolutionId, 'video')\n  }\n\n  updateSelection (data: ResolutionUpdateData) {\n    if (this.resolutionId === -1) {\n      this.currentResolutionLabel = this.labels[data.id]\n    }\n\n    // Automatic resolution only\n    if (data.auto === true) {\n      this.selected(this.resolutionId === -1)\n      return\n    }\n\n    this.selected(this.resolutionId === data.id)\n  }\n\n  updateAutoResolution (data: AutoResolutionUpdateData) {\n    // Check if the auto resolution is enabled or not\n    if (data.possible === false) {\n      this.addClass('disabled')\n    } else {\n      this.removeClass('disabled')\n    }\n\n    this.autoResolutionPossible = data.possible\n  }\n\n  getLabel () {\n    if (this.resolutionId === -1) {\n      return this.label + ' <small>' + this.currentResolutionLabel + '</small>'\n    }\n\n    return this.label\n  }\n}\nvideojs.registerComponent('ResolutionMenuItem', ResolutionMenuItem)\n\nexport { ResolutionMenuItem }\n","import videojs from 'video.js'\n\nimport { LoadedQualityData } from '../peertube-videojs-typings'\nimport { ResolutionMenuItem } from './resolution-menu-item'\n\nconst Menu = videojs.getComponent('Menu')\nconst MenuButton = videojs.getComponent('MenuButton')\nclass ResolutionMenuButton extends MenuButton {\n  labelEl_: HTMLElement\n\n  constructor (player: videojs.Player, options?: videojs.MenuButtonOptions) {\n    super(player, options)\n\n    this.controlText('Quality')\n\n    player.tech(true).on('loadedqualitydata', (e: any, data: any) => this.buildQualities(data))\n\n    player.peertube().on('resolutionChange', () => setTimeout(() => this.trigger('updateLabel'), 0))\n  }\n\n  createEl () {\n    const el = super.createEl()\n\n    this.labelEl_ = videojs.dom.createEl('div', {\n      className: 'vjs-resolution-value'\n    }) as HTMLElement\n\n    el.appendChild(this.labelEl_)\n\n    return el\n  }\n\n  updateARIAAttributes () {\n    this.el().setAttribute('aria-label', 'Quality')\n  }\n\n  createMenu () {\n    return new Menu(this.player_)\n  }\n\n  buildCSSClass () {\n    return super.buildCSSClass() + ' vjs-resolution-button'\n  }\n\n  buildWrapperCSSClass () {\n    return 'vjs-resolution-control ' + super.buildWrapperCSSClass()\n  }\n\n  private addClickListener (component: any) {\n    component.on('click', () => {\n      const children = this.menu.children()\n\n      for (const child of children) {\n        if (component !== child) {\n          (child as videojs.MenuItem).selected(false)\n        }\n      }\n    })\n  }\n\n  private buildQualities (data: LoadedQualityData) {\n    // The automatic resolution item will need other labels\n    const labels: { [ id: number ]: string } = {}\n\n    data.qualityData.video.sort((a, b) => {\n      if (a.id > b.id) return -1\n      if (a.id === b.id) return 0\n      return 1\n    })\n\n    for (const d of data.qualityData.video) {\n      // Skip auto resolution, we'll add it ourselves\n      if (d.id === -1) continue\n\n      const label = d.label === '0p'\n        ? this.player().localize('Audio-only')\n        : d.label\n\n      this.menu.addChild(new ResolutionMenuItem(\n        this.player_,\n        {\n          id: d.id,\n          label,\n          selected: d.selected,\n          callback: data.qualitySwitchCallback\n        })\n      )\n\n      labels[d.id] = d.label\n    }\n\n    this.menu.addChild(new ResolutionMenuItem(\n      this.player_,\n      {\n        id: -1,\n        label: this.player_.localize('Auto'),\n        labels,\n        callback: data.qualitySwitchCallback,\n        selected: true // By default, in auto mode\n      }\n    ))\n\n    for (const m of this.menu.children()) {\n      this.addClickListener(m)\n    }\n\n    this.trigger('menuChanged')\n  }\n}\n\nvideojs.registerComponent('ResolutionMenuButton', ResolutionMenuButton)\n","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\n\nclass SettingsDialog extends Component {\n  constructor (player: videojs.Player) {\n    super(player)\n\n    this.hide()\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   * @method createEl\n   */\n  createEl () {\n    const uniqueId = this.id()\n    const dialogLabelId = 'TTsettingsDialogLabel-' + uniqueId\n    const dialogDescriptionId = 'TTsettingsDialogDescription-' + uniqueId\n\n    return super.createEl('div', {\n      className: 'vjs-settings-dialog vjs-modal-overlay',\n      innerHTML: '',\n      tabIndex: -1\n    }, {\n      'role': 'dialog',\n      'aria-labelledby': dialogLabelId,\n      'aria-describedby': dialogDescriptionId\n    })\n  }\n}\n\nComponent.registerComponent('SettingsDialog', SettingsDialog)\n\nexport { SettingsDialog }\n","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\n\nclass SettingsPanel extends Component {\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player, options)\n  }\n\n  createEl () {\n    return super.createEl('div', {\n      className: 'vjs-settings-panel',\n      innerHTML: '',\n      tabIndex: -1\n    })\n  }\n}\n\nComponent.registerComponent('SettingsPanel', SettingsPanel)\n\nexport { SettingsPanel }\n","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\n\nclass SettingsPanelChild extends Component {\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player, options)\n  }\n\n  createEl () {\n    return super.createEl('div', {\n      className: 'vjs-settings-panel-child',\n      innerHTML: '',\n      tabIndex: -1\n    })\n  }\n}\n\nComponent.registerComponent('SettingsPanelChild', SettingsPanelChild)\n\nexport { SettingsPanelChild }\n","import videojs from 'video.js'\nimport { saveTheaterInStore, getStoredTheater } from '../peertube-player-local-storage'\n\nconst Button = videojs.getComponent('Button')\nclass TheaterButton extends Button {\n\n  private static readonly THEATER_MODE_CLASS = 'vjs-theater-enabled'\n\n  constructor (player: videojs.Player, options: videojs.ComponentOptions) {\n    super(player, options)\n\n    const enabled = getStoredTheater()\n    if (enabled === true) {\n      this.player().addClass(TheaterButton.THEATER_MODE_CLASS)\n\n      this.handleTheaterChange()\n    }\n\n    this.controlText('Theater mode')\n\n    this.player().theaterEnabled = enabled\n  }\n\n  buildCSSClass () {\n    return `vjs-theater-control ${super.buildCSSClass()}`\n  }\n\n  handleTheaterChange () {\n    const theaterEnabled = this.isTheaterEnabled()\n\n    if (theaterEnabled) {\n      this.controlText('Normal mode')\n    } else {\n      this.controlText('Theater mode')\n    }\n\n    saveTheaterInStore(theaterEnabled)\n\n    this.player_.trigger('theaterChange', theaterEnabled)\n  }\n\n  handleClick () {\n    this.player_.toggleClass(TheaterButton.THEATER_MODE_CLASS)\n\n    this.handleTheaterChange()\n  }\n\n  private isTheaterEnabled () {\n    return this.player_.hasClass(TheaterButton.THEATER_MODE_CLASS)\n  }\n}\n\nvideojs.registerComponent('TheaterButton', TheaterButton)\n","import videojs from 'video.js'\nimport { PlaylistPluginOptions } from '../peertube-videojs-typings'\nimport { PlaylistMenu } from './playlist-menu'\n\nconst ClickableComponent = videojs.getComponent('ClickableComponent')\n\nclass PlaylistButton extends ClickableComponent {\n  private playlistInfoElement: HTMLElement\n  private wrapper: HTMLElement\n\n  constructor (player: videojs.Player, options?: PlaylistPluginOptions & { playlistMenu: PlaylistMenu }) {\n    super(player, options as any)\n  }\n\n  createEl () {\n    this.wrapper = super.createEl('div', {\n      className: 'vjs-playlist-button',\n      innerHTML: '',\n      tabIndex: -1\n    }) as HTMLElement\n\n    const icon = super.createEl('div', {\n      className: 'vjs-playlist-icon',\n      innerHTML: '',\n      tabIndex: -1\n    })\n\n    this.playlistInfoElement = super.createEl('div', {\n      className: 'vjs-playlist-info',\n      innerHTML: '',\n      tabIndex: -1\n    }) as HTMLElement\n\n    this.wrapper.appendChild(icon)\n    this.wrapper.appendChild(this.playlistInfoElement)\n\n    this.update()\n\n    return this.wrapper\n  }\n\n  update () {\n    const options = this.options_ as PlaylistPluginOptions\n\n    this.playlistInfoElement.innerHTML = options.getCurrentPosition() + '/' + options.playlist.videosLength\n    this.wrapper.title = this.player().localize('Playlist: {1}', [ options.playlist.displayName ])\n  }\n\n  handleClick () {\n    const playlistMenu = this.getPlaylistMenu()\n    playlistMenu.open()\n  }\n\n  private getPlaylistMenu () {\n    return (this.options_ as any).playlistMenu as PlaylistMenu\n  }\n}\n\nvideojs.registerComponent('PlaylistButton', PlaylistButton)\n\nexport { PlaylistButton }\n","import videojs from 'video.js'\nimport { VideoPlaylistElement } from '@shared/models'\nimport { PlaylistItemOptions } from '../peertube-videojs-typings'\nimport { secondsToTime } from '../utils'\n\nconst Component = videojs.getComponent('Component')\n\nclass PlaylistMenuItem extends Component {\n  private element: VideoPlaylistElement\n\n  constructor (player: videojs.Player, options?: PlaylistItemOptions) {\n    super(player, options as any)\n\n    this.emitTapEvents()\n\n    this.element = options.element\n\n    this.on([ 'click', 'tap' ], () => this.switchPlaylistItem())\n    this.on('keydown', event => this.handleKeyDown(event))\n  }\n\n  createEl () {\n    const options = this.options_ as PlaylistItemOptions\n\n    const li = super.createEl('li', {\n      className: 'vjs-playlist-menu-item',\n      innerHTML: ''\n    }) as HTMLElement\n\n    if (!options.element.video) {\n      li.classList.add('vjs-disabled')\n    }\n\n    const positionBlock = super.createEl('div', {\n      className: 'item-position-block'\n    }) as HTMLElement\n\n    const position = super.createEl('div', {\n      className: 'item-position',\n      innerHTML: options.element.position\n    })\n\n    positionBlock.appendChild(position)\n    li.appendChild(positionBlock)\n\n    if (options.element.video) {\n      this.buildAvailableVideo(li, positionBlock, options)\n    } else {\n      this.buildUnavailableVideo(li)\n    }\n\n    return li\n  }\n\n  setSelected (selected: boolean) {\n    if (selected) this.addClass('vjs-selected')\n    else this.removeClass('vjs-selected')\n  }\n\n  getElement () {\n    return this.element\n  }\n\n  private buildAvailableVideo (li: HTMLElement, positionBlock: HTMLElement, options: PlaylistItemOptions) {\n    const videoElement = options.element\n\n    const player = super.createEl('div', {\n      className: 'item-player'\n    })\n\n    positionBlock.appendChild(player)\n\n    const thumbnail = super.createEl('img', {\n      src: window.location.origin + videoElement.video.thumbnailPath\n    })\n\n    const infoBlock = super.createEl('div', {\n      className: 'info-block'\n    })\n\n    const title = super.createEl('div', {\n      innerHTML: videoElement.video.name,\n      className: 'title'\n    })\n\n    const channel = super.createEl('div', {\n      innerHTML: videoElement.video.channel.displayName,\n      className: 'channel'\n    })\n\n    infoBlock.appendChild(title)\n    infoBlock.appendChild(channel)\n\n    if (videoElement.startTimestamp || videoElement.stopTimestamp) {\n      let html = ''\n\n      if (videoElement.startTimestamp) html += secondsToTime(videoElement.startTimestamp)\n      if (videoElement.stopTimestamp) html += ' - ' + secondsToTime(videoElement.stopTimestamp)\n\n      const timestamps = super.createEl('div', {\n        innerHTML: html,\n        className: 'timestamps'\n      })\n\n      infoBlock.append(timestamps)\n    }\n\n    li.append(thumbnail)\n    li.append(infoBlock)\n  }\n\n  private buildUnavailableVideo (li: HTMLElement) {\n    const block = super.createEl('div', {\n      className: 'item-unavailable',\n      innerHTML: this.player().localize('Unavailable video')\n    })\n\n    li.appendChild(block)\n  }\n\n  private handleKeyDown (event: KeyboardEvent) {\n    if (event.code === 'Space' || event.code === 'Enter') {\n      this.switchPlaylistItem()\n    }\n  }\n\n  private switchPlaylistItem () {\n    const options = this.options_ as PlaylistItemOptions\n\n    options.onClicked()\n  }\n}\n\nComponent.registerComponent('PlaylistMenuItem', PlaylistMenuItem)\n\nexport { PlaylistMenuItem }\n","import videojs from 'video.js'\nimport { VideoPlaylistElement } from '@shared/models'\nimport { PlaylistPluginOptions } from '../peertube-videojs-typings'\nimport { PlaylistMenuItem } from './playlist-menu-item'\n\nconst Component = videojs.getComponent('Component')\n\nclass PlaylistMenu extends Component {\n  private menuItems: PlaylistMenuItem[]\n\n  constructor (player: videojs.Player, options?: PlaylistPluginOptions) {\n    super(player, options as any)\n\n    const self = this\n\n    function userInactiveHandler () {\n      self.close()\n    }\n\n    this.el().addEventListener('mouseenter', () => {\n      this.player().off('userinactive', userInactiveHandler)\n    })\n\n    this.el().addEventListener('mouseleave', () => {\n      this.player().one('userinactive', userInactiveHandler)\n    })\n\n    this.player().on('click', event => {\n      let current = event.target as HTMLElement\n\n      do {\n        if (\n          current.classList.contains('vjs-playlist-menu') ||\n          current.classList.contains('vjs-playlist-button')\n        ) {\n          return\n        }\n\n        current = current.parentElement\n      } while (current)\n\n      this.close()\n    })\n  }\n\n  createEl () {\n    this.menuItems = []\n\n    const options = this.getOptions()\n\n    const menu = super.createEl('div', {\n      className: 'vjs-playlist-menu',\n      innerHTML: '',\n      tabIndex: -1\n    })\n\n    const header = super.createEl('div', {\n      className: 'header'\n    })\n\n    const headerLeft = super.createEl('div')\n\n    const leftTitle = super.createEl('div', {\n      innerHTML: options.playlist.displayName,\n      className: 'title'\n    })\n\n    const playlistChannel = options.playlist.videoChannel\n    const leftSubtitle = super.createEl('div', {\n      innerHTML: playlistChannel\n        ? this.player().localize('By {1}', [ playlistChannel.displayName ])\n        : '',\n      className: 'channel'\n    })\n\n    headerLeft.appendChild(leftTitle)\n    headerLeft.appendChild(leftSubtitle)\n\n    const tick = super.createEl('div', {\n      className: 'cross'\n    })\n    tick.addEventListener('click', () => this.close())\n\n    header.appendChild(headerLeft)\n    header.appendChild(tick)\n\n    const list = super.createEl('ol')\n\n    for (const playlistElement of options.elements) {\n      const item = new PlaylistMenuItem(this.player(), {\n        element: playlistElement,\n        onClicked: () => this.onItemClicked(playlistElement)\n      })\n\n      list.appendChild(item.el())\n\n      this.menuItems.push(item)\n    }\n\n    menu.appendChild(header)\n    menu.appendChild(list)\n\n    return menu\n  }\n\n  update () {\n    const options = this.getOptions()\n\n    this.updateSelected(options.getCurrentPosition())\n  }\n\n  open () {\n    this.player().addClass('playlist-menu-displayed')\n  }\n\n  close () {\n    this.player().removeClass('playlist-menu-displayed')\n  }\n\n  updateSelected (newPosition: number) {\n    for (const item of this.menuItems) {\n      item.setSelected(item.getElement().position === newPosition)\n    }\n  }\n\n  private getOptions () {\n    return this.options_ as PlaylistPluginOptions\n  }\n\n  private onItemClicked (element: VideoPlaylistElement) {\n    this.getOptions().onItemClicked(element)\n  }\n}\n\nComponent.registerComponent('PlaylistMenu', PlaylistMenu)\n\nexport { PlaylistMenu }\n","import videojs from 'video.js'\nimport { PlaylistPluginOptions } from '../peertube-videojs-typings'\nimport { PlaylistButton } from './playlist-button'\nimport { PlaylistMenu } from './playlist-menu'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass PlaylistPlugin extends Plugin {\n  private playlistMenu: PlaylistMenu\n  private playlistButton: PlaylistButton\n  private options: PlaylistPluginOptions\n\n  constructor (player: videojs.Player, options?: PlaylistPluginOptions) {\n    super(player, options)\n\n    this.options = options\n\n    this.player.ready(() => {\n      player.addClass('vjs-playlist')\n    })\n\n    this.playlistMenu = new PlaylistMenu(player, options)\n    this.playlistButton = new PlaylistButton(player, Object.assign({}, options, { playlistMenu: this.playlistMenu }))\n\n    player.addChild(this.playlistMenu, options)\n    player.addChild(this.playlistButton, options)\n  }\n\n  updateSelected () {\n    this.playlistMenu.updateSelected(this.options.getCurrentPosition())\n  }\n}\n\nvideojs.registerPlugin('playlist', PlaylistPlugin)\nexport { PlaylistPlugin }\n","import { basename, dirname } from 'path'\n\nclass RedundancyUrlManager {\n\n  constructor (private baseUrls: string[] = []) {\n    // empty\n  }\n\n  removeBySegmentUrl (segmentUrl: string) {\n    console.log('Removing redundancy of segment URL %s.', segmentUrl)\n\n    const baseUrl = dirname(segmentUrl)\n\n    this.baseUrls = this.baseUrls.filter(u => u !== baseUrl && u !== baseUrl + '/')\n  }\n\n  buildUrl (url: string) {\n    const max = this.baseUrls.length + 1\n    const i = this.getRandomInt(max)\n\n    if (i === max - 1) return url\n\n    const newBaseUrl = this.baseUrls[i]\n    const slashPart = newBaseUrl.endsWith('/') ? '' : '/'\n\n    return newBaseUrl + slashPart + basename(url)\n  }\n\n  countBaseUrls () {\n    return this.baseUrls.length\n  }\n\n  private getRandomInt (max: number) {\n    return Math.floor(Math.random() * Math.floor(max))\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  RedundancyUrlManager\n}\n","import { Segment } from 'p2p-media-loader-core'\nimport { RedundancyUrlManager } from './redundancy-url-manager'\n\nfunction segmentUrlBuilderFactory (redundancyUrlManager: RedundancyUrlManager) {\n  return function segmentBuilder (segment: Segment) {\n    return redundancyUrlManager.buildUrl(segment.url)\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  segmentUrlBuilderFactory\n}\n","import 'videojs-hotkeys/videojs.hotkeys'\nimport 'videojs-dock'\nimport 'videojs-contextmenu-pt'\nimport 'videojs-contrib-quality-levels'\nimport './upnext/end-card'\nimport './upnext/upnext-plugin'\nimport './bezels/bezels-plugin'\nimport './peertube-plugin'\nimport './videojs-components/next-previous-video-button'\nimport './videojs-components/p2p-info-button'\nimport './videojs-components/peertube-link-button'\nimport './videojs-components/peertube-load-progress-bar'\nimport './videojs-components/resolution-menu-button'\nimport './videojs-components/resolution-menu-item'\nimport './videojs-components/settings-dialog'\nimport './videojs-components/settings-menu-button'\nimport './videojs-components/settings-menu-item'\nimport './videojs-components/settings-panel'\nimport './videojs-components/settings-panel-child'\nimport './videojs-components/theater-button'\nimport './playlist/playlist-plugin'\nimport videojs from 'video.js'\nimport { isDefaultLocale } from '@shared/core-utils/i18n'\nimport { VideoFile } from '@shared/models'\nimport { RedundancyUrlManager } from './p2p-media-loader/redundancy-url-manager'\nimport { segmentUrlBuilderFactory } from './p2p-media-loader/segment-url-builder'\nimport { segmentValidatorFactory } from './p2p-media-loader/segment-validator'\nimport { getStoredP2PEnabled } from './peertube-player-local-storage'\nimport {\n  NextPreviousVideoButtonOptions,\n  P2PMediaLoaderPluginOptions,\n  PlaylistPluginOptions,\n  UserWatching,\n  VideoJSCaption,\n  VideoJSPluginOptions\n} from './peertube-videojs-typings'\nimport { TranslationsManager } from './translations-manager'\nimport { buildVideoOrPlaylistEmbed, buildVideoLink, getRtcConfig, isSafari, isIOS } from './utils'\nimport { copyToClipboard } from '../../root-helpers/utils'\n\n// Change 'Playback Rate' to 'Speed' (smaller for our settings menu)\n(videojs.getComponent('PlaybackRateMenuButton') as any).prototype.controlText_ = 'Speed'\n\nconst CaptionsButton = videojs.getComponent('CaptionsButton') as any\n// Change Captions to Subtitles/CC\nCaptionsButton.prototype.controlText_ = 'Subtitles/CC'\n// We just want to display 'Off' instead of 'captions off', keep a space so the variable == true (hacky I know)\nCaptionsButton.prototype.label_ = ' '\n\nexport type PlayerMode = 'webtorrent' | 'p2p-media-loader'\n\nexport type WebtorrentOptions = {\n  videoFiles: VideoFile[]\n}\n\nexport type P2PMediaLoaderOptions = {\n  playlistUrl: string\n  segmentsSha256Url: string\n  trackerAnnounce: string[]\n  redundancyBaseUrls: string[]\n  videoFiles: VideoFile[]\n}\n\nexport interface CustomizationOptions {\n  startTime: number | string\n  stopTime: number | string\n\n  controls?: boolean\n  muted?: boolean\n  loop?: boolean\n  subtitle?: string\n  resume?: string\n\n  peertubeLink: boolean\n}\n\nexport interface CommonOptions extends CustomizationOptions {\n  playerElement: HTMLVideoElement\n  onPlayerElementChange: (element: HTMLVideoElement) => void\n\n  autoplay: boolean\n\n  nextVideo?: () => void\n  hasNextVideo?: () => boolean\n\n  previousVideo?: () => void\n  hasPreviousVideo?: () => boolean\n\n  playlist?: PlaylistPluginOptions\n\n  videoDuration: number\n  enableHotkeys: boolean\n  inactivityTimeout: number\n  poster: string\n\n  theaterButton: boolean\n  captions: boolean\n\n  videoViewUrl: string\n  embedUrl: string\n  embedTitle: string\n\n  isLive: boolean\n\n  language?: string\n\n  videoCaptions: VideoJSCaption[]\n\n  videoUUID: string\n\n  userWatching?: UserWatching\n\n  serverUrl: string\n}\n\nexport type PeertubePlayerManagerOptions = {\n  common: CommonOptions,\n  webtorrent: WebtorrentOptions,\n  p2pMediaLoader?: P2PMediaLoaderOptions\n}\n\nexport class PeertubePlayerManager {\n  private static playerElementClassName: string\n  private static onPlayerChange: (player: videojs.Player) => void\n  private static alreadyPlayed = false\n\n  static initState () {\n    PeertubePlayerManager.alreadyPlayed = false\n  }\n\n  static async initialize (mode: PlayerMode, options: PeertubePlayerManagerOptions, onPlayerChange: (player: videojs.Player) => void) {\n    let p2pMediaLoader: any\n\n    this.onPlayerChange = onPlayerChange\n    this.playerElementClassName = options.common.playerElement.className\n\n    if (mode === 'webtorrent') await import('./webtorrent/webtorrent-plugin')\n    if (mode === 'p2p-media-loader') {\n      [ p2pMediaLoader ] = await Promise.all([\n        import('p2p-media-loader-hlsjs'),\n        import('./p2p-media-loader/p2p-media-loader-plugin')\n      ])\n    }\n\n    const videojsOptions = this.getVideojsOptions(mode, options, p2pMediaLoader)\n\n    await TranslationsManager.loadLocaleInVideoJS(options.common.serverUrl, options.common.language, videojs)\n\n    const self = this\n    return new Promise(res => {\n      videojs(options.common.playerElement, videojsOptions, function (this: videojs.Player) {\n        const player = this\n\n        let alreadyFallback = false\n\n        player.tech(true).one('error', () => {\n          if (!alreadyFallback) self.maybeFallbackToWebTorrent(mode, player, options)\n          alreadyFallback = true\n        })\n\n        player.one('error', () => {\n          if (!alreadyFallback) self.maybeFallbackToWebTorrent(mode, player, options)\n          alreadyFallback = true\n        })\n\n        player.one('play', () => {\n          PeertubePlayerManager.alreadyPlayed = true\n        })\n\n        self.addContextMenu(mode, player, options.common.embedUrl, options.common.embedTitle)\n\n        player.bezels()\n\n        return res(player)\n      })\n    })\n  }\n\n  private static async maybeFallbackToWebTorrent (currentMode: PlayerMode, player: any, options: PeertubePlayerManagerOptions) {\n    if (currentMode === 'webtorrent') return\n\n    console.log('Fallback to webtorrent.')\n\n    const newVideoElement = document.createElement('video')\n    newVideoElement.className = this.playerElementClassName\n\n    // VideoJS wraps our video element inside a div\n    let currentParentPlayerElement = options.common.playerElement.parentNode\n    // Fix on IOS, don't ask me why\n    if (!currentParentPlayerElement) currentParentPlayerElement = document.getElementById(options.common.playerElement.id).parentNode\n\n    currentParentPlayerElement.parentNode.insertBefore(newVideoElement, currentParentPlayerElement)\n\n    options.common.playerElement = newVideoElement\n    options.common.onPlayerElementChange(newVideoElement)\n\n    player.dispose()\n\n    await import('./webtorrent/webtorrent-plugin')\n\n    const mode = 'webtorrent'\n    const videojsOptions = this.getVideojsOptions(mode, options)\n\n    const self = this\n    videojs(newVideoElement, videojsOptions, function (this: videojs.Player) {\n      const player = this\n\n      self.addContextMenu(mode, player, options.common.embedUrl, options.common.embedTitle)\n\n      PeertubePlayerManager.onPlayerChange(player)\n    })\n  }\n\n  private static getVideojsOptions (\n    mode: PlayerMode,\n    options: PeertubePlayerManagerOptions,\n    p2pMediaLoaderModule?: any\n  ): videojs.PlayerOptions {\n    const commonOptions = options.common\n    const isHLS = mode === 'p2p-media-loader'\n\n    let autoplay = this.getAutoPlayValue(commonOptions.autoplay)\n    let html5 = {\n      preloadTextTracks: false\n    }\n\n    const plugins: VideoJSPluginOptions = {\n      peertube: {\n        mode,\n        autoplay, // Use peertube plugin autoplay because we could get the file by webtorrent\n        videoViewUrl: commonOptions.videoViewUrl,\n        videoDuration: commonOptions.videoDuration,\n        userWatching: commonOptions.userWatching,\n        subtitle: commonOptions.subtitle,\n        videoCaptions: commonOptions.videoCaptions,\n        stopTime: commonOptions.stopTime,\n        isLive: commonOptions.isLive,\n        videoUUID: commonOptions.videoUUID\n      }\n    }\n\n    if (commonOptions.playlist) {\n      plugins.playlist = commonOptions.playlist\n    }\n\n    if (commonOptions.enableHotkeys === true) {\n      PeertubePlayerManager.addHotkeysOptions(plugins)\n    }\n\n    if (isHLS) {\n      const { hlsjs } = PeertubePlayerManager.addP2PMediaLoaderOptions(plugins, options, p2pMediaLoaderModule)\n\n      Object.assign(html5, hlsjs.html5)\n    }\n\n    if (mode === 'webtorrent') {\n      PeertubePlayerManager.addWebTorrentOptions(plugins, options)\n\n      // WebTorrent plugin handles autoplay, because we do some hackish stuff in there\n      autoplay = false\n    }\n\n    const videojsOptions = {\n      html5,\n\n      // We don't use text track settings for now\n      textTrackSettings: false as any, // FIXME: typings\n      controls: commonOptions.controls !== undefined ? commonOptions.controls : true,\n      loop: commonOptions.loop !== undefined ? commonOptions.loop : false,\n\n      muted: commonOptions.muted !== undefined\n        ? commonOptions.muted\n        : undefined, // Undefined so the player knows it has to check the local storage\n\n      autoplay: this.getAutoPlayValue(autoplay),\n\n      poster: commonOptions.poster,\n      inactivityTimeout: commonOptions.inactivityTimeout,\n      playbackRates: [ 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2 ],\n\n      plugins,\n\n      controlBar: {\n        children: this.getControlBarChildren(mode, {\n          captions: commonOptions.captions,\n          peertubeLink: commonOptions.peertubeLink,\n          theaterButton: commonOptions.theaterButton,\n\n          nextVideo: commonOptions.nextVideo,\n          hasNextVideo: commonOptions.hasNextVideo,\n\n          previousVideo: commonOptions.previousVideo,\n          hasPreviousVideo: commonOptions.hasPreviousVideo\n        }) as any // FIXME: typings\n      }\n    }\n\n    if (commonOptions.language && !isDefaultLocale(commonOptions.language)) {\n      Object.assign(videojsOptions, { language: commonOptions.language })\n    }\n\n    return videojsOptions\n  }\n\n  private static addP2PMediaLoaderOptions (\n    plugins: VideoJSPluginOptions,\n    options: PeertubePlayerManagerOptions,\n    p2pMediaLoaderModule: any\n  ) {\n    const p2pMediaLoaderOptions = options.p2pMediaLoader\n    const commonOptions = options.common\n\n    const trackerAnnounce = p2pMediaLoaderOptions.trackerAnnounce\n                                                 .filter(t => t.startsWith('ws'))\n\n    const redundancyUrlManager = new RedundancyUrlManager(options.p2pMediaLoader.redundancyBaseUrls)\n\n    const p2pMediaLoader: P2PMediaLoaderPluginOptions = {\n      redundancyUrlManager,\n      type: 'application/x-mpegURL',\n      startTime: commonOptions.startTime,\n      src: p2pMediaLoaderOptions.playlistUrl\n    }\n\n    let consumeOnly = false\n    // FIXME: typings\n    if (navigator && (navigator as any).connection && (navigator as any).connection.type === 'cellular') {\n      console.log('We are on a cellular connection: disabling seeding.')\n      consumeOnly = true\n    }\n\n    const p2pMediaLoaderConfig = {\n      loader: {\n        trackerAnnounce,\n        segmentValidator: segmentValidatorFactory(options.p2pMediaLoader.segmentsSha256Url, options.common.isLive),\n        rtcConfig: getRtcConfig(),\n        requiredSegmentsPriority: 1,\n        segmentUrlBuilder: segmentUrlBuilderFactory(redundancyUrlManager),\n        useP2P: getStoredP2PEnabled(),\n        consumeOnly\n      },\n      segments: {\n        swarmId: p2pMediaLoaderOptions.playlistUrl\n      }\n    }\n    const hlsjs = {\n      levelLabelHandler: (level: { height: number, width: number }) => {\n        const resolution = Math.min(level.height || 0, level.width || 0)\n\n        const file = p2pMediaLoaderOptions.videoFiles.find(f => f.resolution.id === resolution)\n        // We don't have files for live videos\n        if (!file) return level.height\n\n        let label = file.resolution.label\n        if (file.fps >= 50) label += file.fps\n\n        return label\n      },\n      html5: {\n        hlsjsConfig: {\n          capLevelToPlayerSize: true,\n          autoStartLoad: false,\n          liveSyncDurationCount: 5,\n          loader: new p2pMediaLoaderModule.Engine(p2pMediaLoaderConfig).createLoaderClass()\n        }\n      }\n    }\n\n    const toAssign = { p2pMediaLoader, hlsjs }\n    Object.assign(plugins, toAssign)\n\n    return toAssign\n  }\n\n  private static addWebTorrentOptions (plugins: VideoJSPluginOptions, options: PeertubePlayerManagerOptions) {\n    const commonOptions = options.common\n    const webtorrentOptions = options.webtorrent\n\n    const autoplay = this.getAutoPlayValue(commonOptions.autoplay) === 'play'\n      ? true\n      : false\n\n    const webtorrent = {\n      autoplay,\n      videoDuration: commonOptions.videoDuration,\n      playerElement: commonOptions.playerElement,\n      videoFiles: webtorrentOptions.videoFiles,\n      startTime: commonOptions.startTime\n    }\n\n    Object.assign(plugins, { webtorrent })\n  }\n\n  private static getControlBarChildren (mode: PlayerMode, options: {\n    peertubeLink: boolean\n    theaterButton: boolean\n    captions: boolean\n\n    nextVideo?: Function\n    hasNextVideo?: () => boolean\n\n    previousVideo?: Function\n    hasPreviousVideo?: () => boolean\n  }) {\n    const settingEntries = []\n    const loadProgressBar = mode === 'webtorrent' ? 'peerTubeLoadProgressBar' : 'loadProgressBar'\n\n    // Keep an order\n    settingEntries.push('playbackRateMenuButton')\n    if (options.captions === true) settingEntries.push('captionsButton')\n    settingEntries.push('resolutionMenuButton')\n\n    const children = {}\n\n    if (options.previousVideo) {\n      const buttonOptions: NextPreviousVideoButtonOptions = {\n        type: 'previous',\n        handler: options.previousVideo,\n        isDisabled: () => {\n          if (!options.hasPreviousVideo) return false\n\n          return !options.hasPreviousVideo()\n        }\n      }\n\n      Object.assign(children, {\n        'previousVideoButton': buttonOptions\n      })\n    }\n\n    Object.assign(children, { playToggle: {} })\n\n    if (options.nextVideo) {\n      const buttonOptions: NextPreviousVideoButtonOptions = {\n        type: 'next',\n        handler: options.nextVideo,\n        isDisabled: () => {\n          if (!options.hasNextVideo) return false\n\n          return !options.hasNextVideo()\n        }\n      }\n\n      Object.assign(children, {\n        'nextVideoButton': buttonOptions\n      })\n    }\n\n    Object.assign(children, {\n      'currentTimeDisplay': {},\n      'timeDivider': {},\n      'durationDisplay': {},\n      'liveDisplay': {},\n\n      'flexibleWidthSpacer': {},\n      'progressControl': {\n        children: {\n          'seekBar': {\n            children: {\n              [loadProgressBar]: {},\n              'mouseTimeDisplay': {},\n              'playProgressBar': {}\n            }\n          }\n        }\n      },\n\n      'p2PInfoButton': {},\n\n      'muteToggle': {},\n      'volumeControl': {},\n\n      'settingsButton': {\n        setup: {\n          maxHeightOffset: 40\n        },\n        entries: settingEntries\n      }\n    })\n\n    if (options.peertubeLink === true) {\n      Object.assign(children, {\n        'peerTubeLinkButton': {}\n      })\n    }\n\n    if (options.theaterButton === true) {\n      Object.assign(children, {\n        'theaterButton': {}\n      })\n    }\n\n    Object.assign(children, {\n      'fullscreenToggle': {}\n    })\n\n    return children\n  }\n\n  private static addContextMenu (mode: PlayerMode, player: videojs.Player, videoEmbedUrl: string, videoEmbedTitle: string) {\n    const content = () => {\n      const isLoopEnabled = player.options_['loop']\n      const items = [\n        {\n          icon: 'repeat',\n          label: player.localize('Play in loop') + (isLoopEnabled ? '<span class=\"vjs-icon-tick-white\"></span>' : ''),\n          listener: function () {\n            player.options_['loop'] = !isLoopEnabled\n          }\n        },\n        {\n          label: player.localize('Copy the video URL'),\n          listener: function () {\n            copyToClipboard(buildVideoLink())\n          }\n        },\n        {\n          label: player.localize('Copy the video URL at the current time'),\n          listener: function (this: videojs.Player) {\n            copyToClipboard(buildVideoLink({ startTime: this.currentTime() }))\n          }\n        },\n        {\n          icon: 'code',\n          label: player.localize('Copy embed code'),\n          listener: () => {\n            copyToClipboard(buildVideoOrPlaylistEmbed(videoEmbedUrl, videoEmbedTitle))\n          }\n        }\n      ]\n\n      if (mode === 'webtorrent') {\n        items.push({\n          label: player.localize('Copy magnet URI'),\n          listener: function (this: videojs.Player) {\n            copyToClipboard(this.webtorrent().getCurrentVideoFile().magnetUri)\n          }\n        })\n      }\n\n      return items.map(i => ({\n        ...i,\n        label: `<span class=\"vjs-icon-${i.icon || 'link-2'}\"></span>` + i.label\n      }))\n    }\n\n    // adding the menu\n    //player.contextmenuUI({ content })\n  }\n\n  private static addHotkeysOptions (plugins: VideoJSPluginOptions) {\n    const isNaked = (event: KeyboardEvent, key: string) =>\n      (!event.ctrlKey && !event.altKey && !event.metaKey && !event.shiftKey && event.key === key)\n\n    Object.assign(plugins, {\n      hotkeys: {\n        skipInitialFocus: true,\n        enableInactiveFocus: false,\n        captureDocumentHotkeys: true,\n        documentHotkeysFocusElementFilter: (e: HTMLElement) => {\n          const tagName = e.tagName.toLowerCase()\n          return e.id === 'content' || tagName === 'body' || tagName === 'video'\n        },\n\n        enableVolumeScroll: false,\n        enableModifiersForNumbers: false,\n\n        rewindKey: function (event: KeyboardEvent) {\n          return isNaked(event, 'ArrowLeft')\n        },\n\n        forwardKey: function (event: KeyboardEvent) {\n          return isNaked(event, 'ArrowRight')\n        },\n\n        fullscreenKey: function (event: KeyboardEvent) {\n          // fullscreen with the f key or Ctrl+Enter\n          return isNaked(event, 'f') || (!event.altKey && event.ctrlKey && event.key === 'Enter')\n        },\n\n        customKeys: {\n          increasePlaybackRateKey: {\n            key: function (event: KeyboardEvent) {\n              return isNaked(event, '>')\n            },\n            handler: function (player: videojs.Player) {\n              const newValue = Math.min(player.playbackRate() + 0.1, 5)\n              player.playbackRate(parseFloat(newValue.toFixed(2)))\n            }\n          },\n          decreasePlaybackRateKey: {\n            key: function (event: KeyboardEvent) {\n              return isNaked(event, '<')\n            },\n            handler: function (player: videojs.Player) {\n              const newValue = Math.max(player.playbackRate() - 0.1, 0.10)\n              player.playbackRate(parseFloat(newValue.toFixed(2)))\n            }\n          },\n          frameByFrame: {\n            key: function (event: KeyboardEvent) {\n              return isNaked(event, '.')\n            },\n            handler: function (player: videojs.Player) {\n              player.pause()\n              // Calculate movement distance (assuming 30 fps)\n              const dist = 1 / 30\n              player.currentTime(player.currentTime() + dist)\n            }\n          }\n        }\n      }\n    })\n  }\n\n  private static getAutoPlayValue (autoplay: any) {\n    if (autoplay !== true) return autoplay\n\n    // On first play, disable autoplay to avoid issues\n    // But if the player already played videos, we can safely autoplay next ones\n    if (isIOS() || isSafari()) {\n      return PeertubePlayerManager.alreadyPlayed ? 'play' : false\n    }\n\n    return 'play'\n  }\n}\n\n// ############################################################################\n\nexport {\n  videojs\n}\n"],"sourceRoot":""}