{"version":3,"sources":["webpack:///./src/assets/player/webtorrent/peertube-chunk-store.ts","webpack:///./src/assets/player/webtorrent/video-renderer.ts","webpack:///./src/assets/player/webtorrent/webtorrent-plugin.ts","webpack:///util (ignored)?bf09","webpack:///util (ignored)?755c","webpack:///./lib/conn-pool (ignored)","webpack:///bittorrent-dht/client (ignored)?3128","webpack:///./common-node (ignored)","webpack:///./lib/client/http-tracker (ignored)","webpack:///./lib/client/udp-tracker (ignored)","webpack:///ws (ignored)","webpack:///bittorrent-lsd (ignored)","webpack:///fs (ignored)?7e56","webpack:///util (ignored)","webpack:///net (ignored)","webpack:///os (ignored)","webpack:///fs (ignored)","webpack:///utp-native (ignored)","webpack:///ut_pex (ignored)","webpack:///./server (ignored)","webpack:///util (ignored)?f15f","webpack:///is-file (ignored)","webpack:///./get-files (ignored)","webpack:///bittorrent-dht/client (ignored)","webpack:///load-ip-set (ignored)","webpack:///fs (ignored)?bede","webpack:///decompress-response (ignored)"],"names":[],"mappings":"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","file":"2.chunk.js","sourcesContent":["// From https://github.com/MinEduTDF/idb-chunk-store\n// We use temporary IndexDB (all data are removed on destroy) to avoid RAM issues\n// Thanks @santiagogil and @Feross\n\nimport { EventEmitter } from 'events'\nimport Dexie from 'dexie'\n\nclass ChunkDatabase extends Dexie {\n  chunks: Dexie.Table<{ id: number, buf: Buffer }, number>\n\n  constructor (dbname: string) {\n    super(dbname)\n\n    this.version(1).stores({\n      chunks: 'id'\n    })\n  }\n}\n\nclass ExpirationDatabase extends Dexie {\n  databases: Dexie.Table<{ name: string, expiration: number }, number>\n\n  constructor () {\n    super('webtorrent-expiration')\n\n    this.version(1).stores({\n      databases: 'name,expiration'\n    })\n  }\n}\n\nexport class PeertubeChunkStore extends EventEmitter {\n  private static readonly BUFFERING_PUT_MS = 1000\n  private static readonly CLEANER_INTERVAL_MS = 1000 * 60 // 1 minute\n  private static readonly CLEANER_EXPIRATION_MS = 1000 * 60 * 5 // 5 minutes\n\n  chunkLength: number\n\n  private pendingPut: { id: number, buf: Buffer, cb: Function }[] = []\n  // If the store is full\n  private memoryChunks: { [ id: number ]: Buffer | true } = {}\n  private databaseName: string\n  private putBulkTimeout: any\n  private cleanerInterval: any\n  private db: ChunkDatabase\n  private expirationDB: ExpirationDatabase\n  private readonly length: number\n  private readonly lastChunkLength: number\n  private readonly lastChunkIndex: number\n\n  constructor (chunkLength: number, opts: any) {\n    super()\n\n    this.databaseName = 'webtorrent-chunks-'\n\n    if (!opts) opts = {}\n    if (opts.torrent && opts.torrent.infoHash) this.databaseName += opts.torrent.infoHash\n    else this.databaseName += '-default'\n\n    this.setMaxListeners(100)\n\n    this.chunkLength = Number(chunkLength)\n    if (!this.chunkLength) throw new Error('First argument must be a chunk length')\n\n    this.length = Number(opts.length) || Infinity\n\n    if (this.length !== Infinity) {\n      this.lastChunkLength = (this.length % this.chunkLength) || this.chunkLength\n      this.lastChunkIndex = Math.ceil(this.length / this.chunkLength) - 1\n    }\n\n    this.db = new ChunkDatabase(this.databaseName)\n    // Track databases that expired\n    this.expirationDB = new ExpirationDatabase()\n\n    this.runCleaner()\n  }\n\n  put (index: number, buf: Buffer, cb: (err?: Error) => void) {\n    const isLastChunk = (index === this.lastChunkIndex)\n    if (isLastChunk && buf.length !== this.lastChunkLength) {\n      return this.nextTick(cb, new Error('Last chunk length must be ' + this.lastChunkLength))\n    }\n    if (!isLastChunk && buf.length !== this.chunkLength) {\n      return this.nextTick(cb, new Error('Chunk length must be ' + this.chunkLength))\n    }\n\n    // Specify we have this chunk\n    this.memoryChunks[index] = true\n\n    // Add it to the pending put\n    this.pendingPut.push({ id: index, buf, cb })\n    // If it's already planned, return\n    if (this.putBulkTimeout) return\n\n    // Plan a future bulk insert\n    this.putBulkTimeout = setTimeout(async () => {\n      const processing = this.pendingPut\n      this.pendingPut = []\n      this.putBulkTimeout = undefined\n\n      try {\n        await this.db.transaction('rw', this.db.chunks, () => {\n          return this.db.chunks.bulkPut(processing.map(p => ({ id: p.id, buf: p.buf })))\n        })\n      } catch (err) {\n        console.log('Cannot bulk insert chunks. Store them in memory.', { err })\n\n        processing.forEach(p => this.memoryChunks[ p.id ] = p.buf)\n      } finally {\n        processing.forEach(p => p.cb())\n      }\n    }, PeertubeChunkStore.BUFFERING_PUT_MS)\n  }\n\n  get (index: number, opts: any, cb: (err?: Error, buf?: Buffer) => void): void {\n    if (typeof opts === 'function') return this.get(index, null, opts)\n\n    // IndexDB could be slow, use our memory index first\n    const memoryChunk = this.memoryChunks[index]\n    if (memoryChunk === undefined) {\n      const err = new Error('Chunk not found') as any\n      err['notFound'] = true\n\n      return process.nextTick(() => cb(err))\n    }\n\n    // Chunk in memory\n    if (memoryChunk !== true) return cb(null, memoryChunk)\n\n    // Chunk in store\n    this.db.transaction('r', this.db.chunks, async () => {\n      const result = await this.db.chunks.get({ id: index })\n      if (result === undefined) return cb(null, Buffer.alloc(0))\n\n      const buf = result.buf\n      if (!opts) return this.nextTick(cb, null, buf)\n\n      const offset = opts.offset || 0\n      const len = opts.length || (buf.length - offset)\n      return cb(null, buf.slice(offset, len + offset))\n    })\n    .catch(err => {\n      console.error(err)\n      return cb(err)\n    })\n  }\n\n  close (cb: (err?: Error) => void) {\n    return this.destroy(cb)\n  }\n\n  async destroy (cb: (err?: Error) => void) {\n    try {\n      if (this.pendingPut) {\n        clearTimeout(this.putBulkTimeout)\n        this.pendingPut = null\n      }\n      if (this.cleanerInterval) {\n        clearInterval(this.cleanerInterval)\n        this.cleanerInterval = null\n      }\n\n      if (this.db) {\n        this.db.close()\n\n        await this.dropDatabase(this.databaseName)\n      }\n\n      if (this.expirationDB) {\n        this.expirationDB.close()\n        this.expirationDB = null\n      }\n\n      return cb()\n    } catch (err) {\n      console.error('Cannot destroy peertube chunk store.', err)\n      return cb(err)\n    }\n  }\n\n  private runCleaner () {\n    this.checkExpiration()\n\n    this.cleanerInterval = setInterval(async () => {\n      this.checkExpiration()\n    }, PeertubeChunkStore.CLEANER_INTERVAL_MS)\n  }\n\n  private async checkExpiration () {\n    let databasesToDeleteInfo: { name: string }[] = []\n\n    try {\n      await this.expirationDB.transaction('rw', this.expirationDB.databases, async () => {\n        // Update our database expiration since we are alive\n        await this.expirationDB.databases.put({\n          name: this.databaseName,\n          expiration: new Date().getTime() + PeertubeChunkStore.CLEANER_EXPIRATION_MS\n        })\n\n        const now = new Date().getTime()\n        databasesToDeleteInfo = await this.expirationDB.databases.where('expiration').below(now).toArray()\n      })\n    } catch (err) {\n      console.error('Cannot update expiration of fetch expired databases.', err)\n    }\n\n    for (const databaseToDeleteInfo of databasesToDeleteInfo) {\n      await this.dropDatabase(databaseToDeleteInfo.name)\n    }\n  }\n\n  private async dropDatabase (databaseName: string) {\n    const dbToDelete = new ChunkDatabase(databaseName)\n    console.log('Destroying IndexDB database %s.', databaseName)\n\n    try {\n      await dbToDelete.delete()\n\n      await this.expirationDB.transaction('rw', this.expirationDB.databases, () => {\n        return this.expirationDB.databases.where({ name: databaseName }).delete()\n      })\n    } catch (err) {\n      console.error('Cannot delete %s.', databaseName, err)\n    }\n  }\n\n  private nextTick <T> (cb: (err?: Error, val?: T) => void, err: Error, val?: T) {\n    process.nextTick(() => cb(err, val), undefined)\n  }\n}\n","// Thanks: https://github.com/feross/render-media\n// TODO: use render-media once https://github.com/feross/render-media/issues/32 is fixed\n\nconst MediaElementWrapper = require('mediasource')\nimport { extname } from 'path'\nconst videostream = require('videostream')\n\nconst VIDEOSTREAM_EXTS = [\n  '.m4a',\n  '.m4v',\n  '.mp4'\n]\n\ntype RenderMediaOptions = {\n  controls: boolean\n  autoplay: boolean\n}\n\nfunction renderVideo (\n  file: any,\n  elem: HTMLVideoElement,\n  opts: RenderMediaOptions,\n  callback: (err: Error, renderer: any) => void\n) {\n  validateFile(file)\n\n  return renderMedia(file, elem, opts, callback)\n}\n\nfunction renderMedia (file: any, elem: HTMLVideoElement, opts: RenderMediaOptions, callback: (err: Error, renderer?: any) => void) {\n  const extension = extname(file.name).toLowerCase()\n  let preparedElem: any\n  let currentTime = 0\n  let renderer: any\n\n  try {\n    if (VIDEOSTREAM_EXTS.indexOf(extension) >= 0) {\n      renderer = useVideostream()\n    } else {\n      renderer = useMediaSource()\n    }\n  } catch (err) {\n    return callback(err)\n  }\n\n  function useVideostream () {\n    prepareElem()\n    preparedElem.addEventListener('error', function onError (err: Error) {\n      preparedElem.removeEventListener('error', onError)\n\n      return callback(err)\n    })\n    preparedElem.addEventListener('loadstart', onLoadStart)\n    return new videostream(file, preparedElem)\n  }\n\n  function useMediaSource (useVP9 = false) {\n    const codecs = getCodec(file.name, useVP9)\n\n    prepareElem()\n    preparedElem.addEventListener('error', function onError (err: Error) {\n      preparedElem.removeEventListener('error', onError)\n\n      // Try with vp9 before returning an error\n      if (codecs.indexOf('vp8') !== -1) return fallbackToMediaSource(true)\n\n      return callback(err)\n    })\n    preparedElem.addEventListener('loadstart', onLoadStart)\n\n    const wrapper = new MediaElementWrapper(preparedElem)\n    const writable = wrapper.createWriteStream(codecs)\n    file.createReadStream().pipe(writable)\n\n    if (currentTime) preparedElem.currentTime = currentTime\n\n    return wrapper\n  }\n\n  function fallbackToMediaSource (useVP9 = false) {\n    if (useVP9 === true) console.log('Falling back to media source with VP9 enabled.')\n    else console.log('Falling back to media source..')\n\n    useMediaSource(useVP9)\n  }\n\n  function prepareElem () {\n    if (preparedElem === undefined) {\n      preparedElem = elem\n\n      preparedElem.addEventListener('progress', function () {\n        currentTime = elem.currentTime\n      })\n    }\n  }\n\n  function onLoadStart () {\n    preparedElem.removeEventListener('loadstart', onLoadStart)\n    if (opts.autoplay) preparedElem.play()\n\n    callback(null, renderer)\n  }\n}\n\nfunction validateFile (file: any) {\n  if (file == null) {\n    throw new Error('file cannot be null or undefined')\n  }\n  if (typeof file.name !== 'string') {\n    throw new Error('missing or invalid file.name property')\n  }\n  if (typeof file.createReadStream !== 'function') {\n    throw new Error('missing or invalid file.createReadStream property')\n  }\n}\n\nfunction getCodec (name: string, useVP9 = false) {\n  const ext = extname(name).toLowerCase()\n  if (ext === '.mp4') {\n    return 'video/mp4; codecs=\"avc1.640029, mp4a.40.5\"'\n  }\n\n  if (ext === '.webm') {\n    if (useVP9 === true) return 'video/webm; codecs=\"vp9, opus\"'\n\n    return 'video/webm; codecs=\"vp8, vorbis\"'\n  }\n\n  return undefined\n}\n\nexport {\n  renderVideo\n}\n","import videojs from 'video.js'\nimport * as WebTorrent from 'webtorrent'\nimport { renderVideo } from './video-renderer'\nimport { LoadedQualityData, PlayerNetworkInfo, WebtorrentPluginOptions } from '../peertube-videojs-typings'\nimport { getRtcConfig, timeToInt, videoFileMaxByResolution, videoFileMinByResolution, isIOS, isSafari } from '../utils'\nimport { PeertubeChunkStore } from './peertube-chunk-store'\nimport {\n  getAverageBandwidthInStore,\n  getStoredMute,\n  getStoredP2PEnabled,\n  getStoredVolume,\n  saveAverageBandwidth\n} from '../peertube-player-local-storage'\nimport { VideoFile } from '@shared/models'\n\nconst CacheChunkStore = require('cache-chunk-store')\n\ntype PlayOptions = {\n  forcePlay?: boolean,\n  seek?: number,\n  delay?: number\n}\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass WebTorrentPlugin extends Plugin {\n  readonly videoFiles: VideoFile[]\n\n  private readonly playerElement: HTMLVideoElement\n\n  private readonly autoplay: boolean = false\n  private readonly startTime: number = 0\n  private readonly savePlayerSrcFunction: videojs.Player['src']\n  private readonly videoDuration: number\n  private readonly CONSTANTS = {\n    INFO_SCHEDULER: 1000, // Don't change this\n    AUTO_QUALITY_SCHEDULER: 3000, // Check quality every 3 seconds\n    AUTO_QUALITY_THRESHOLD_PERCENT: 30, // Bandwidth should be 30% more important than a resolution bitrate to change to it\n    AUTO_QUALITY_OBSERVATION_TIME: 10000, // Wait 10 seconds after having change the resolution before another check\n    AUTO_QUALITY_HIGHER_RESOLUTION_DELAY: 5000, // Buffering higher resolution during 5 seconds\n    BANDWIDTH_AVERAGE_NUMBER_OF_VALUES: 5 // Last 5 seconds to build average bandwidth\n  }\n\n  private readonly webtorrent = new WebTorrent({\n    tracker: {\n      rtcConfig: getRtcConfig()\n    },\n    dht: false\n  })\n\n  private currentVideoFile: VideoFile\n  private torrent: WebTorrent.Torrent\n\n  private renderer: any\n  private fakeRenderer: any\n  private destroyingFakeRenderer = false\n\n  private autoResolution = true\n  private autoResolutionPossible = true\n  private isAutoResolutionObservation = false\n  private playerRefusedP2P = false\n\n  private torrentInfoInterval: any\n  private autoQualityInterval: any\n  private addTorrentDelay: any\n  private qualityObservationTimer: any\n  private runAutoQualitySchedulerTimer: any\n\n  private downloadSpeeds: number[] = []\n\n  constructor (player: videojs.Player, options?: WebtorrentPluginOptions) {\n    super(player)\n\n    this.startTime = timeToInt(options.startTime)\n\n    // Disable auto play on iOS\n    this.autoplay = options.autoplay\n    this.playerRefusedP2P = !getStoredP2PEnabled()\n\n    this.videoFiles = options.videoFiles\n    this.videoDuration = options.videoDuration\n\n    this.savePlayerSrcFunction = this.player.src\n    this.playerElement = options.playerElement\n\n    this.player.ready(() => {\n      const playerOptions = this.player.options_\n\n      const volume = getStoredVolume()\n      if (volume !== undefined) this.player.volume(volume)\n\n      const muted = playerOptions.muted !== undefined ? playerOptions.muted : getStoredMute()\n      if (muted !== undefined) this.player.muted(muted)\n\n      this.player.duration(options.videoDuration)\n\n      this.initializePlayer()\n      this.runTorrentInfoScheduler()\n\n      this.player.one('play', () => {\n        // Don't run immediately scheduler, wait some seconds the TCP connections are made\n        this.runAutoQualitySchedulerTimer = setTimeout(() => this.runAutoQualityScheduler(), this.CONSTANTS.AUTO_QUALITY_SCHEDULER)\n      })\n    })\n  }\n\n  dispose () {\n    clearTimeout(this.addTorrentDelay)\n    clearTimeout(this.qualityObservationTimer)\n    clearTimeout(this.runAutoQualitySchedulerTimer)\n\n    clearInterval(this.torrentInfoInterval)\n    clearInterval(this.autoQualityInterval)\n\n    // Don't need to destroy renderer, video player will be destroyed\n    this.flushVideoFile(this.currentVideoFile, false)\n\n    this.destroyFakeRenderer()\n  }\n\n  getCurrentResolutionId () {\n    return this.currentVideoFile ? this.currentVideoFile.resolution.id : -1\n  }\n\n  updateVideoFile (\n    videoFile?: VideoFile,\n    options: {\n      forcePlay?: boolean,\n      seek?: number,\n      delay?: number\n    } = {},\n    done: () => void = () => { /* empty */ }\n  ) {\n    // Automatically choose the adapted video file\n    if (!videoFile) {\n      const savedAverageBandwidth = getAverageBandwidthInStore()\n      videoFile = savedAverageBandwidth\n        ? this.getAppropriateFile(savedAverageBandwidth)\n        : this.pickAverageVideoFile()\n    }\n\n    if (!videoFile) {\n      throw Error(`Can't update video file since videoFile is undefined.`)\n    }\n\n    // Don't add the same video file once again\n    if (this.currentVideoFile !== undefined && this.currentVideoFile.magnetUri === videoFile.magnetUri) {\n      return\n    }\n\n    // Do not display error to user because we will have multiple fallback\n    this.disableErrorDisplay();\n\n    // Hack to \"simulate\" src link in video.js >= 6\n    // Without this, we can't play the video after pausing it\n    // https://github.com/videojs/video.js/blob/master/src/js/player.js#L1633\n    (this.player as any).src = () => true\n    const oldPlaybackRate = this.player.playbackRate()\n\n    const previousVideoFile = this.currentVideoFile\n    this.currentVideoFile = videoFile\n\n    // Don't try on iOS that does not support MediaSource\n    // Or don't use P2P if webtorrent is disabled\n    if (isIOS() || this.playerRefusedP2P) {\n      return this.fallbackToHttp(options, () => {\n        this.player.playbackRate(oldPlaybackRate)\n        return done()\n      })\n    }\n\n    this.addTorrent(this.currentVideoFile.magnetUri, previousVideoFile, options, () => {\n      this.player.playbackRate(oldPlaybackRate)\n      return done()\n    })\n\n    this.changeQuality()\n    this.trigger('resolutionChange', { auto: this.autoResolution, resolutionId: this.currentVideoFile.resolution.id })\n  }\n\n  updateResolution (resolutionId: number, delay = 0) {\n    // Remember player state\n    const currentTime = this.player.currentTime()\n    const isPaused = this.player.paused()\n\n    // Hide bigPlayButton\n    if (!isPaused) {\n      this.player.bigPlayButton.hide()\n    }\n\n    // Audio-only (resolutionId === 0) gets special treatment\n    if (resolutionId === 0) {\n      // Audio-only: show poster, do not auto-hide controls\n      this.player.addClass('vjs-playing-audio-only-content')\n      this.player.posterImage.show()\n    } else {\n      // Hide poster to have black background\n      this.player.removeClass('vjs-playing-audio-only-content')\n      this.player.posterImage.hide()\n    }\n\n    const newVideoFile = this.videoFiles.find(f => f.resolution.id === resolutionId)\n    const options = {\n      forcePlay: false,\n      delay,\n      seek: currentTime + (delay / 1000)\n    }\n\n    this.updateVideoFile(newVideoFile, options)\n  }\n\n  flushVideoFile (videoFile: VideoFile, destroyRenderer = true) {\n    if (videoFile !== undefined && this.webtorrent.get(videoFile.magnetUri)) {\n      if (destroyRenderer === true && this.renderer && this.renderer.destroy) this.renderer.destroy()\n\n      this.webtorrent.remove(videoFile.magnetUri)\n      console.log('Removed ' + videoFile.magnetUri)\n    }\n  }\n\n  enableAutoResolution () {\n    this.autoResolution = true\n    this.trigger('resolutionChange', { auto: this.autoResolution, resolutionId: this.getCurrentResolutionId() })\n  }\n\n  disableAutoResolution (forbid = false) {\n    if (forbid === true) this.autoResolutionPossible = false\n\n    this.autoResolution = false\n    this.trigger('autoResolutionChange', { possible: this.autoResolutionPossible })\n    this.trigger('resolutionChange', { auto: this.autoResolution, resolutionId: this.getCurrentResolutionId() })\n  }\n\n  isAutoResolutionPossible () {\n    return this.autoResolutionPossible\n  }\n\n  getTorrent () {\n    return this.torrent\n  }\n\n  getCurrentVideoFile () {\n    return this.currentVideoFile\n  }\n\n  private addTorrent (\n    magnetOrTorrentUrl: string,\n    previousVideoFile: VideoFile,\n    options: PlayOptions,\n    done: Function\n  ) {\n    if (!magnetOrTorrentUrl) return this.fallbackToHttp(options, done)\n\n    console.log('Adding ' + magnetOrTorrentUrl + '.')\n\n    const oldTorrent = this.torrent\n    const torrentOptions = {\n      // Don't use arrow function: it breaks webtorrent (that uses `new` keyword)\n      store: function (chunkLength: number, storeOpts: any) {\n        return new CacheChunkStore(new PeertubeChunkStore(chunkLength, storeOpts), {\n          max: 100\n        })\n      }\n    }\n\n    this.torrent = this.webtorrent.add(magnetOrTorrentUrl, torrentOptions, torrent => {\n      console.log('Added ' + magnetOrTorrentUrl + '.')\n\n      if (oldTorrent) {\n        // Pause the old torrent\n        this.stopTorrent(oldTorrent)\n\n        // We use a fake renderer so we download correct pieces of the next file\n        if (options.delay) this.renderFileInFakeElement(torrent.files[ 0 ], options.delay)\n      }\n\n      // Render the video in a few seconds? (on resolution change for example, we wait some seconds of the new video resolution)\n      this.addTorrentDelay = setTimeout(() => {\n        // We don't need the fake renderer anymore\n        this.destroyFakeRenderer()\n\n        const paused = this.player.paused()\n\n        this.flushVideoFile(previousVideoFile)\n\n        // Update progress bar (just for the UI), do not wait rendering\n        if (options.seek) this.player.currentTime(options.seek)\n\n        const renderVideoOptions = { autoplay: false, controls: true }\n        renderVideo(torrent.files[ 0 ], this.playerElement, renderVideoOptions, (err, renderer) => {\n          this.renderer = renderer\n\n          if (err) return this.fallbackToHttp(options, done)\n\n          return this.tryToPlay(err => {\n            if (err) return done(err)\n\n            if (options.seek) this.seek(options.seek)\n            if (options.forcePlay === false && paused === true) this.player.pause()\n\n            return done()\n          })\n        })\n      }, options.delay || 0)\n    })\n\n    this.torrent.on('error', (err: any) => console.error(err))\n\n    this.torrent.on('warning', (err: any) => {\n      // We don't support HTTP tracker but we don't care -> we use the web socket tracker\n      if (err.message.indexOf('Unsupported tracker protocol') !== -1) return\n\n      // Users don't care about issues with WebRTC, but developers do so log it in the console\n      if (err.message.indexOf('Ice connection failed') !== -1) {\n        console.log(err)\n        return\n      }\n\n      // Magnet hash is not up to date with the torrent file, add directly the torrent file\n      if (err.message.indexOf('incorrect info hash') !== -1) {\n        console.error('Incorrect info hash detected, falling back to torrent file.')\n        const newOptions = { forcePlay: true, seek: options.seek }\n        return this.addTorrent(this.torrent[ 'xs' ], previousVideoFile, newOptions, done)\n      }\n\n      // Remote instance is down\n      if (err.message.indexOf('from xs param') !== -1) {\n        this.handleError(err)\n      }\n\n      console.warn(err)\n    })\n  }\n\n  private tryToPlay (done?: (err?: Error) => void) {\n    if (!done) done = function () { /* empty */ }\n\n    const playPromise = this.player.play()\n    if (playPromise !== undefined) {\n      return playPromise.then(() => done())\n                        .catch((err: Error) => {\n                          if (err.message.indexOf('The play() request was interrupted by a call to pause()') !== -1) {\n                            return\n                          }\n\n                          console.error(err)\n                          this.player.pause()\n                          this.player.posterImage.show()\n                          this.player.removeClass('vjs-has-autoplay')\n                          this.player.removeClass('vjs-has-big-play-button-clicked')\n                          this.player.removeClass('vjs-playing-audio-only-content')\n\n                          return done()\n                        })\n    }\n\n    return done()\n  }\n\n  private seek (time: number) {\n    this.player.currentTime(time)\n    this.player.handleTechSeeked_()\n  }\n\n  private getAppropriateFile (averageDownloadSpeed?: number): VideoFile {\n    if (this.videoFiles === undefined) return undefined\n\n    const files = this.videoFiles.filter(f => f.resolution.id !== 0)\n\n    if (files.length === 0) return undefined\n    if (files.length === 1) return files[0]\n\n    // Don't change the torrent if the player ended\n    if (this.torrent && this.torrent.progress === 1 && this.player.ended()) return this.currentVideoFile\n\n    if (!averageDownloadSpeed) averageDownloadSpeed = this.getAndSaveActualDownloadSpeed()\n\n    // Limit resolution according to player height\n    const playerHeight = this.playerElement.offsetHeight\n\n    // We take the first resolution just above the player height\n    // Example: player height is 530px, we want the 720p file instead of 480p\n    let maxResolution = files[0].resolution.id\n    for (let i = files.length - 1; i >= 0; i--) {\n      const resolutionId = files[i].resolution.id\n      if (resolutionId !== 0 && resolutionId >= playerHeight) {\n        maxResolution = resolutionId\n        break\n      }\n    }\n\n    // Filter videos we can play according to our screen resolution and bandwidth\n    const filteredFiles = files.filter(f => f.resolution.id <= maxResolution)\n                               .filter(f => {\n                                 const fileBitrate = (f.size / this.videoDuration)\n                                 let threshold = fileBitrate\n\n                                 // If this is for a higher resolution or an initial load: add a margin\n                                 if (!this.currentVideoFile || f.resolution.id > this.currentVideoFile.resolution.id) {\n                                   threshold += ((fileBitrate * this.CONSTANTS.AUTO_QUALITY_THRESHOLD_PERCENT) / 100)\n                                 }\n\n                                 return averageDownloadSpeed > threshold\n                               })\n\n    // If the download speed is too bad, return the lowest resolution we have\n    if (filteredFiles.length === 0) return videoFileMinByResolution(files)\n\n    return videoFileMaxByResolution(filteredFiles)\n  }\n\n  private getAndSaveActualDownloadSpeed () {\n    const start = Math.max(this.downloadSpeeds.length - this.CONSTANTS.BANDWIDTH_AVERAGE_NUMBER_OF_VALUES, 0)\n    const lastDownloadSpeeds = this.downloadSpeeds.slice(start, this.downloadSpeeds.length)\n    if (lastDownloadSpeeds.length === 0) return -1\n\n    const sum = lastDownloadSpeeds.reduce((a, b) => a + b)\n    const averageBandwidth = Math.round(sum / lastDownloadSpeeds.length)\n\n    // Save the average bandwidth for future use\n    saveAverageBandwidth(averageBandwidth)\n\n    return averageBandwidth\n  }\n\n  private initializePlayer () {\n    this.buildQualities()\n\n    if (this.autoplay) {\n      this.player.posterImage.hide()\n\n      return this.updateVideoFile(undefined, { forcePlay: true, seek: this.startTime })\n    }\n\n    // Proxy first play\n    const oldPlay = this.player.play.bind(this.player);\n    (this.player as any).play = () => {\n      this.player.addClass('vjs-has-big-play-button-clicked')\n      this.player.play = oldPlay\n\n      this.updateVideoFile(undefined, { forcePlay: true, seek: this.startTime })\n    }\n  }\n\n  private runAutoQualityScheduler () {\n    this.autoQualityInterval = setInterval(() => {\n\n      // Not initialized or in HTTP fallback\n      if (this.torrent === undefined || this.torrent === null) return\n      if (this.autoResolution === false) return\n      if (this.isAutoResolutionObservation === true) return\n\n      const file = this.getAppropriateFile()\n      let changeResolution = false\n      let changeResolutionDelay = 0\n\n      // Lower resolution\n      if (this.isPlayerWaiting() && file.resolution.id < this.currentVideoFile.resolution.id) {\n        console.log('Downgrading automatically the resolution to: %s', file.resolution.label)\n        changeResolution = true\n      } else if (file.resolution.id > this.currentVideoFile.resolution.id) { // Higher resolution\n        console.log('Upgrading automatically the resolution to: %s', file.resolution.label)\n        changeResolution = true\n        changeResolutionDelay = this.CONSTANTS.AUTO_QUALITY_HIGHER_RESOLUTION_DELAY\n      }\n\n      if (changeResolution === true) {\n        this.updateResolution(file.resolution.id, changeResolutionDelay)\n\n        // Wait some seconds in observation of our new resolution\n        this.isAutoResolutionObservation = true\n\n        this.qualityObservationTimer = setTimeout(() => {\n          this.isAutoResolutionObservation = false\n        }, this.CONSTANTS.AUTO_QUALITY_OBSERVATION_TIME)\n      }\n    }, this.CONSTANTS.AUTO_QUALITY_SCHEDULER)\n  }\n\n  private isPlayerWaiting () {\n    return this.player && this.player.hasClass('vjs-waiting')\n  }\n\n  private runTorrentInfoScheduler () {\n    this.torrentInfoInterval = setInterval(() => {\n      // Not initialized yet\n      if (this.torrent === undefined) return\n\n      // Http fallback\n      if (this.torrent === null) return this.player.trigger('p2pInfo', false)\n\n      // this.webtorrent.downloadSpeed because we need to take into account the potential old torrent too\n      if (this.webtorrent.downloadSpeed !== 0) this.downloadSpeeds.push(this.webtorrent.downloadSpeed)\n\n      return this.player.trigger('p2pInfo', {\n        source: 'webtorrent',\n        http: {\n          downloadSpeed: 0,\n          uploadSpeed: 0,\n          downloaded: 0,\n          uploaded: 0\n        },\n        p2p: {\n          downloadSpeed: this.torrent.downloadSpeed,\n          numPeers: this.torrent.numPeers,\n          uploadSpeed: this.torrent.uploadSpeed,\n          downloaded: this.torrent.downloaded,\n          uploaded: this.torrent.uploaded\n        }\n      } as PlayerNetworkInfo)\n    }, this.CONSTANTS.INFO_SCHEDULER)\n  }\n\n  private fallbackToHttp (options: PlayOptions, done?: Function) {\n    const paused = this.player.paused()\n\n    this.disableAutoResolution(true)\n\n    this.flushVideoFile(this.currentVideoFile, true)\n    this.torrent = null\n\n    // Enable error display now this is our last fallback\n    this.player.one('error', () => this.enableErrorDisplay())\n\n    const httpUrl = this.currentVideoFile.fileUrl\n    this.player.src = this.savePlayerSrcFunction\n    this.player.src(httpUrl)\n\n    this.changeQuality()\n\n    // We changed the source, so reinit captions\n    this.player.trigger('sourcechange')\n\n    return this.tryToPlay(err => {\n      if (err && done) return done(err)\n\n      if (options.seek) this.seek(options.seek)\n      if (options.forcePlay === false && paused === true) this.player.pause()\n\n      if (done) return done()\n    })\n  }\n\n  private handleError (err: Error | string) {\n    return this.player.trigger('customError', { err })\n  }\n\n  private enableErrorDisplay () {\n    this.player.addClass('vjs-error-display-enabled')\n  }\n\n  private disableErrorDisplay () {\n    this.player.removeClass('vjs-error-display-enabled')\n  }\n\n  private pickAverageVideoFile () {\n    if (this.videoFiles.length === 1) return this.videoFiles[0]\n\n    return this.videoFiles[Math.floor(this.videoFiles.length / 2)]\n  }\n\n  private stopTorrent (torrent: WebTorrent.Torrent) {\n    torrent.pause()\n    // Pause does not remove actual peers (in particular the webseed peer)\n    torrent.removePeer(torrent[ 'ws' ])\n  }\n\n  private renderFileInFakeElement (file: WebTorrent.TorrentFile, delay: number) {\n    this.destroyingFakeRenderer = false\n\n    const fakeVideoElem = document.createElement('video')\n    renderVideo(file, fakeVideoElem, { autoplay: false, controls: false }, (err, renderer) => {\n      this.fakeRenderer = renderer\n\n      // The renderer returns an error when we destroy it, so skip them\n      if (this.destroyingFakeRenderer === false && err) {\n        console.error('Cannot render new torrent in fake video element.', err)\n      }\n\n      // Load the future file at the correct time (in delay MS - 2 seconds)\n      fakeVideoElem.currentTime = this.player.currentTime() + (delay - 2000)\n    })\n  }\n\n  private destroyFakeRenderer () {\n    if (this.fakeRenderer) {\n      this.destroyingFakeRenderer = true\n\n      if (this.fakeRenderer.destroy) {\n        try {\n          this.fakeRenderer.destroy()\n        } catch (err) {\n          console.log('Cannot destroy correctly fake renderer.', err)\n        }\n      }\n      this.fakeRenderer = undefined\n    }\n  }\n\n  private buildQualities () {\n    const qualityLevelsPayload = []\n\n    for (const file of this.videoFiles) {\n      const representation = {\n        id: file.resolution.id,\n        label: this.buildQualityLabel(file),\n        height: file.resolution.id,\n        _enabled: true\n      }\n\n      this.player.qualityLevels().addQualityLevel(representation)\n\n      qualityLevelsPayload.push({\n        id: representation.id,\n        label: representation.label,\n        selected: false\n      })\n    }\n\n    const payload: LoadedQualityData = {\n      qualitySwitchCallback: (d: any) => this.qualitySwitchCallback(d),\n      qualityData: {\n        video: qualityLevelsPayload\n      }\n    }\n    this.player.tech(true).trigger('loadedqualitydata', payload)\n  }\n\n  private buildQualityLabel (file: VideoFile) {\n    let label = file.resolution.label\n\n    if (file.fps && file.fps >= 50) {\n      label += file.fps\n    }\n\n    return label\n  }\n\n  private qualitySwitchCallback (id: number) {\n    if (id === -1) {\n      if (this.autoResolutionPossible === true) this.enableAutoResolution()\n      return\n    }\n\n    this.disableAutoResolution()\n    this.updateResolution(id)\n  }\n\n  private changeQuality () {\n    const resolutionId = this.currentVideoFile.resolution.id\n    const qualityLevels = this.player.qualityLevels()\n\n    if (resolutionId === -1) {\n      qualityLevels.selectedIndex = -1\n      return\n    }\n\n    for (let i = 0; i < qualityLevels.length; i++) {\n      const q = qualityLevels[i]\n      if (q.height === resolutionId) qualityLevels.selectedIndex_ = i\n    }\n  }\n}\n\nvideojs.registerPlugin('webtorrent', WebTorrentPlugin)\nexport { WebTorrentPlugin }\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}